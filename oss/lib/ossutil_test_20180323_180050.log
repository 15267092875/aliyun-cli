2018/03/23 18:00:50 command_test.go:68: test command started
The command creates a configuration file and stores credentials.
For the following settings, carriage return means skip the configuration. Please try "help config" to see the meaning of the settings.

Please enter language(CH/EN, default is:EN, the configuration will go into effect after the command successfully executed):Please enter endpoint:Please enter accessKeyID:Please enter accessKeySecret:Please enter stsToken:2018/03/23 18:00:50 config_test.go:20: test config started
The command creates a configuration file and stores credentials.
For the following settings, carriage return means skip the configuration. Please try "help config" to see the meaning of the settings.

Please enter language(CH/EN, default is:EN, the configuration will go into effect after the command successfully executed):Please enter accessKeyID:Please enter accessKeySecret:Please enter stsToken:Please enter endpoint:The command creates a configuration file and stores credentials.
For the following settings, carriage return means skip the configuration. Please try "help config" to see the meaning of the settings.

Please enter language(CH/EN, default is:EN, the configuration will go into effect after the command successfully executed):Please enter endpoint:Please enter accessKeyID:Please enter accessKeySecret:Please enter stsToken:The command creates a configuration file and stores credentials.
For the following settings, carriage return means skip the configuration. Please try "help config" to see the meaning of the settings.

Please enter stsToken:Please enter endpoint:Please enter accessKeyID:Please enter accessKeySecret:The command creates a configuration file and stores credentials.
For the following settings, carriage return means skip the configuration. Please try "help config" to see the meaning of the settings.

Please enter endpoint:Please enter accessKeyID:Please enter accessKeySecret:Please enter stsToken:该命令创建将一个配置文件，在其中存储配置信息。
对于下述配置，回车将跳过相关配置项的设置，配置项的具体含义，请使用"help config"命令查看。

请输入语言(CH/EN，默认为：EN，该配置项将在此次config命令成功结束后生效)：请输入accessKeySecret：请输入stsToken：请输入endpoint：请输入accessKeyID：The command creates a configuration file and stores credentials.
For the following settings, carriage return means skip the configuration. Please try "help config" to see the meaning of the settings.

Please enter language(CH/EN, default is:EN, the configuration will go into effect after the command successfully executed):Please enter endpoint:Please enter accessKeyID:Please enter accessKeySecret:Please enter stsToken:2018/03/23 18:00:50 config_test.go:27: test config completed
2018/03/23 18:00:50 help_test.go:16: test help started
用法: ossutil [command] [args...] [options...]
请使用ossutil help command来显示command命令的帮助

Commands:
  mb              cloud_url [options]
        创建Bucket
  ls              [cloud_url] [options]
        列举Buckets或者Objects
  rm              cloud_url [options]
        删除Bucket或Objects
  stat            cloud_url [options]
        显示bucket或者object的描述信息
  set-acl         cloud_url [acl] [options]
        设置bucket或者objects的acl
  set-meta        cloud_url [meta] [options]
        设置已上传的objects的元信息
  cp              src_url dest_url [options]
        上传，下载或拷贝Objects
  restore         cloud_url [options]
        恢复冷冻状态的Objects为可读状态
  create-symlink  cloud_url target_url [options]
        创建符号链接
  read-symlink    cloud_url [options]
        读取符号链接文件的描述信息
  sign            cloud_url [meta] [options]
        生成object下载链接

Additional Commands:
  help            [command]
        获取命令的帮助文档
  config          [options]
        创建配置文件用以存储配置项
  hash            file_url [options]
        计算本地文件的crc64或md5
  update          [options]
        更新ossutil

Usage: ossutil [command] [args...] [options...]
Please use 'ossutil help command' to show help of command

Commands:
  mb              cloud_url [options]
        Make Bucket
  ls              [cloud_url] [options]
        List Buckets or Objects
  rm              cloud_url [options]
        Remove Bucket or Objects
  stat            cloud_url [options]
        Display meta information of bucket or objects
  set-acl         cloud_url [acl] [options]
        Set acl on bucket or objects
  set-meta        cloud_url [meta] [options]
        set metadata on already uploaded objects
  cp              src_url dest_url [options]
        Upload, Download or Copy Objects
  restore         cloud_url [options]
        Restore Frozen State Object to Read Ready Status
  create-symlink  cloud_url target_url [options]
        Create symlink of object
  read-symlink    cloud_url [options]
        Display meta information of symlink object
  sign            cloud_url [options]
        Generate download link for object

Additional Commands:
  help            [command]
        Get help about commands
  config          [options]
        Create configuration file to store credentials
  hash            file_url [options]
        Get crc64 or md5 of local file
  update          [options]
        Update ossutil

SYNOPSIS

    Get help about commands

SYNTAX

    ossutil help [command]

DETAIL DESCRIPTION

    The command provide the usage of all commands on which help is available, 
    or the usage of the specified command.

Usage:

    There are two usages:

    1) ossutil help
        The usage provides a summary of all commands, each command shows the
    synopsis and a simplified expression of the syntax.

    2) ossutil help command
        The usage provides help about the specified command, which contains
    a detailed description of the command, include samples and optional options.

SAMPLE

    ossutil help
    ossutil help help
    ossutil help ls

OPTIONS

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Create configuration file to store credentials

SYNTAX

    ossutil config [-e endpoint] [-i id] [-k key] [-t token] [-L language] [--output-dir outdir] [-c file]

DETAIL DESCRIPTION

    The command create a configuration file and stores credentials
    information user specified. Credentials information is used when
    access OSS(if a command supports --config-file option, then the 
    information is useful to the command).

    The configuration file can be specified by user, which in default
    is /Users/jxyowen/.ossutilconfig. If the configuration file exist, suppose
    the file is: a, ossutil will save a as a.bak, and rewrite file a, 
    at this time, if file a.bak exists, a.bak will be rewrited.

    Note:
    (1) If the configuration file path you specified is not the default 
    path, please specify --config-file option to the path when use other 
    commands. If you do not specify the --config-file option, ossutil 
    will read the configuration file: /Users/jxyowen/.ossutilconfig.

    (2) Several configuration can be specified through option, eg: --endpoint, 
    --access-key-id etc(for more see the help of each command). If you 
    specified those options when use command, and meanwhile those configurations 
    exist in configurations file, PRI: option > configurations file. 

    (3) If you specified --endpoint or --access-key-id or --access-key-secret 
    or --sts-token option when use command, then ossutil does not insist 
    on configurations file. 

Usage:

    There are two usages for the command, one is interactive(shows
    in 1) ), which is recommended because of safety problem. another is
    non interactive(shows in 2) ).

    1) ossutil config [-c file]
        The usage provides an interactive way to configure credentials.
    Interactively ossutil asks you for:
        (1) config file
            If user enter carriage return, ossutil use the default file: 
        /Users/jxyowen/.ossutilconfig.
            If you specified the config file, please specify --config-file 
        option to the path when use other command that needs configuration. 
        To see the commands who support --config-file option please see the 
        help of each command.
        (2) language
            When configure for the first time(config file not exit), ossutil 
        will ask user to set the language(support Chinese or English at this 
        time), if user did not input the language, ossutil will set language 
        to the value of --language option, if user did not specify --language 
        option, ossutil will set it to Chinese.
            If config file exists, ossutil will set the language according to 
        --language option and configuration in config file, instead of asking 
        user for it.
            ossutil will read the language configuration when run command, if 
        the configuration does not exist or is invalid, ossutil will show in 
        default language: EN.
            Notice that the configuration will go into effect after the config 
        command successfully executed, it's dimmed while execute the command.
        (3) endpoint, accessKeyID, accessKeySecret
            Carriage return means skip the configuration of these options.
        Note: Endpoint means a second-level domain(SLD), eg: oss.aliyuncs.com.
            The three options are necessary in normal condition.
        (4) stsToken
            If you use stsToken to access oss, please enter your stsToken. If not, 
        please enter carriage return to skip the configuration.
            For more information about stsToken, see: https://help.aliyun.com/document_detail/31931.html?spm=5176.doc31867.6.632.hZFNSv
        (5) outputDir
            The section config the directory to place output file in. The section 
        can not be configed through interactive mode, but the section in config 
        file are still effective. 
            The default directory of outputDir is: ossutil_output in current 
        directory. ossutil will place all output files generated during running 
        in this directory. Output files include: report file(generated when error 
        occurs in cp command while batch upload/downlaod/copy files). 
            More information about report file, see help of cp command.
            Note: if outputDir is not exist, ossutil will create the directory 
        automatically, if outputDir you specified exists and is not a directory, 
        ossutil will return an error. 

        In interactive config, Bucket-Endpoint and Bucket-Cname is removed, but 
        the two sections in config file are still effective. 
        (6) Bucket-Endpoint
            Bucket-Endpoint specify endpoint for every individual bucket, the 
        section is prior to endpoint in base section.  
            In current version, Bucket-Endpoint interactive configuration is 
        removed, but the option in config file is still effective. Note, the 
        endpoint should be a second-level domain(SLD), eg: oss.aliyuncs.com. 
            When access a bucket, ossutil will search for endpoint corresponding 
        to the bucket in this section, if found, the endpoint is prior to the 
        endpoint in the base section. If --endpoint option is specified, --endpoint 
        option has the highest priority.
        (7) Bucket-Cname
            Bucket-Cname specify CNAME host for every individual bucket, the section 
        is prior to Bucket-Endpoint and endpoint in the base section.
            More information about CNAME host see: https://help.aliyun.com/document_detail/27112.html?spm=5176.product27099.4.6.Lf06oS#1. 
            In current version, Bucket-Cname interactive configuration is removed, 
        but the option in config file is still effective.
            When access a bucket, ossutil will search for endpoint corresponding 
        tothe bucket in this section, if found, the endpoint has priority over 
        the endpoint in Bucket-Endpoint and the endpoint in the base section. If 
        --endpoint option is specified, --endpoint option has the highest priority.

        PRI: --endpoint option > Bucket-Cname > Bucket-Endpoint > endpoint > default endpoint

    2) ossutil config options
        If any options except --language and --config-file is specified, the 
    command enter the non interactive mode. All the configurations should be 
    specified by options.


Credential File Format:

    [Credentials]
        language = EN 
        endpoint = oss.aliyuncs.com 
        accessKeyID = your_key_id
        accessKeySecret = your_key_secret
        stsToken = your_sts_token
        outputDir = your_output_dir
    [Bucket-Endpoint]
        bucket1 = endpoint1
        bucket2 = endpoint2
        ...
    [Bucket-Cname]
        bucket1 = cname1
        bucket2 = cname2
        ...

SAMPLE

    ossutil config
    ossutil config -e oss-cn-hangzhou.aliyuncs.com -c ~/.myconfig

OPTIONS

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Get crc64 or md5 of local file

SYNTAX

    ossutil hash file_url [--type=hashtype]

DETAIL DESCRIPTION

    The command calculate crc64 or md5/content-md5 value of the specified local file, 
    specify the hashtype by --type, default hashtype is crc64. 

    Warning: user can use stat command to check the crc64 or md5/content-md5 value of 
    normal oss object, see the X-Oss-Hash-Crc64ecma and Content-Md5 field. If the object 
    was uploaded to oss before oss support crc64 feature, stat result will not show 
    X-Oss-Hash-Crc64ecma, if the object is append file type or multipart, stat result 
    will not show Content-Md5. 

    Crc64 is calcuated according to ECMA-182(http://www.ecma-international.org/publications/standards/Ecma-182.htm).

    When hashtype is md5, it will output both md5 and content-md5 of local file. 
    Content-md5 is base64 encoded string of md5. For more detial about content-md5, 
    please refer to https://tools.ietf.org/html/rfc1864.

Usage:

    ossutil hash file_url [--type=hashtype]

SAMPLE

    1) Get crc64 of local file: 
        ossutil hash test.txt or
        ossutil hash test.txt --type=crc64
        
        output: 
        CRC64-ECMA                  : 295992936743767023        

    2) Get md5  of local file: 
        ossutil hash test.txt --type=md5
         
        output:
        MD5                         : 01C3C45C03B2AF225EFAD9F911A33D73
        Content-MD5                 : AcPEXAOyryJe+tn5EaM9cw==

OPTIONS

    --type=crc64
        hash type, Default: crc64, value range is: crc64/md5



SYNOPSIS

    Update ossutil

SYNTAX

    ossutil update [-f]

DETAIL DESCRIPTION

    The command check version of current ossutil and get the latest version, output the 
    versions, if any updated version exists, the command ask you for upgrading. If --force 
    option is specified, the command upgrade without asking.

SAMPLE

    ossutil update
    ossutil update -f

OPTIONS

    -f, --force
        operate silently without asking user to confirm the operation.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Make Bucket

SYNTAX

    ossutil mb oss://bucket [--acl acl] [--storage-class class] [-c file]

DETAIL DESCRIPTION

    The command create bucket under the specified credentials. You can specify bucket acl 
    information through --acl option meanwhile. But you can not specify the region for the 
    bucket, the region is decided by endpoint in config file. If the bucket existed under 
    the credentials, no error occurs, but if the bucket belongs to others, error occurs.

    More information about endpoint in config, see help config.

    More information about region, see Region section in https://help.aliyun.com/document_detail/31827.html?spm=5176.doc31826.6.138.rhUAjo.

ACL:

    ossutil supports following bucket acls, shorthand versions in brackets:
        public-read-write
        public-read
        private

    More information about acl, see help set-acl.

StorageClass:

    There are three kinds of StorageClass:
        Standard
        IA
        Archive

    More information about StorageClass see: https://help.aliyun.com/document_detail/31959.html?spm=5176.doc31957.6.839.E1ifnh

Usage:

    ossutil mb oss://bucket [--acl=acl] [--storage-class class] [-c file]
        If you create bucket without --acl option, ossutil will create bucket under the 
    specified credentials and the bucket acl is private, if you want to change acl, please 
    use set-acl command. 
        If you create bucket without --storage-class option, the storage class of bucket will
     be the default one: Standard. 
        If you create bucket with --acl option, ossutil will check the validity of acl, if 
    invalid, ossutil will enter interactive mode, prompt the valid acls and ask you for it. 
        If you create bucket with --storage-class option, ossutil will check the validity of 
    storage class.

SAMPLE

    1)ossutil mb oss://bucket1
    2)ossutil mb oss://bucket1 --acl=public-read-write
    3)ossutil mb oss://bucket1 --storage-class IA 
    4)ossutil mb oss://bucket1 --acl=public-read-write --storage-class IA

OPTIONS

    --acl
        acl information.

    --storage-class=Standard
        set the storage class of bucket(default: Standard), value range is: Standard/IA/Archive.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    List Buckets or Objects

SYNTAX

    ossutil ls [oss://bucket[/prefix]] [-s] [-d] [--limited-num num] [--marker marker] [--upload-id-marker umarker] [-c file]

DETAIL DESCRIPTION

    The command list buckets of the specified credentials. or objects of the specified 
    endpoint and credentials, with simple additional information, about each matching 
    provider, bucket, subdirectory, or object. If --short-format option is specified, 
    ossutil will show by short format. 

--encoding-type option

    If the --encoding-type option is setted to url, the object/prefix inputted is url 
    encoded, if the --marker option or --upload-id-marker option is specified, ossutil 
    will consider the marker or upload-id-marker inputted is also url encoded.

    Note: If the option is specified, the cloud_url like: oss://bucket/object should be 
    inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not 
    be url encoded. 


Usage:

    There are two usages:

    1) ossutil ls [oss://] [-s] [--limited-num num] [--marker marker]
        If you list without a cloud_url, ossutil lists all the buckets using the credentials
    in config file with last modified time and location in addition. --show_format option 
    will ignore last modified time and location. The usage do not support --directory 
    option.

    2) ossutil ls oss://bucket[/prefix] [-s] [-d] [-m] [-a] [--limited-num num] [--marker marker] [--upload-id-marker umarker]
        If you list without --multipart and --all-type option, ossutil will list objects 
    in the specified bucket(with the prefix if you specified), with object size, last 
    modified time and etag in addition, --short-format option ignores all the additional 
    information. --directory option returns top-level subdirectory names instead of contents 
    of the subdirectory, which in default show by short format. the directory is end with /. 
        --multipart option will show multipart upload tasks under the cloud_url(oss://bucket[/prefix]), 
    which means, ossutil will show the uploadId of those uncompleted multipart, whose object 
    name starts with the specified prefix. ossutil will show the init time of uploadId meanwhile. 
    The usage also supports --short-format and --directory option. (Multipart upload is also used 
    in resume cp. More information about multipart see: https://help.aliyun.com/document_detail/31991.html?spm=5176.doc31992.6.880.VOSDk5). 
        --all-type option will show objects and multipart upload tasks under the cloud_url(oss://bucket[/prefix]),  
    which means, ossutil will both show the objects with the specified prefix and the uploadId of 
    those uncompleted multipart, whose object name starts with the specified prefix. The usage also 
    support --short-format and --directory option.
        If user specified --limited-num option, the total num will not exceed the num. If user list 
    objects and Multipart Uploads meanwhile, the total num of objects and Multipart Uploads will not 
    exceed the num. 
        --upload-id-marker option is not effective when list objects. When list Multipart Uploads, 
    --marker option and --upload-id-marker option decide the initial position of listing meanwhile,
    for more initial, see: https://help.aliyun.com/document_detail/31997.html?spm=5176.doc31965.6.887.MK6GVw.

SAMPLE

    1) ossutil ls -s
        oss://bucket1
        oss://bucket2
        oss://bucket3
        Bucket Number is: 3

    2) ossutil ls oss:// -s
        oss://bucket1
        oss://bucket2
        oss://bucket3
        Bucket Number is: 3

    3) ossutil ls oss://bucket1 -s
        oss://bucket1/dir1/obj11
        oss://bucket1/obj1
        oss://bucket1/sample.txt
        Object Number is: 3

    4) ossutil ls oss://bucket1
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:06:29 +0000 CST  201933      Standard   7E2F4A7F1AC9D2F0996E8332D5EA5B41  oss://bucket1/dir1/obj11
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        2016-04-08 14:50:47 +0000 CST 6476984      Standard   4F16FDAE7AC404CEC8B727FCC67779D6  oss://bucket1/sample.txt
        Object Number is: 3

    5) ossutil ls oss://bucket1 -d
        oss://bucket1/obj1
        oss://bucket1/dir1
        oss://bucket1/sample.txt
        Object and Directory Number is: 3

    6) ossutil ls oss://bucket1 -m 
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        2017-01-20 11:16:21 +0800 CST  A20157A7B2FEC4670626DAE0F4C0073C  oss://bucket1/tobj
        UploadID Number is: 3
    
    7) ossutil ls oss://bucket1/obj -m 
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 2
 
    8) ossutil ls oss://bucket1 -a 
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:06:29 +0000 CST  201933      Standard   7E2F4A7F1AC9D2F0996E8332D5EA5B41  oss://bucket1/dir1/obj11
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        2016-04-08 14:50:47 +0000 CST 6476984      Standard   4F16FDAE7AC404CEC8B727FCC67779D6  oss://bucket1/sample.txt
        Object Number is: 3
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:43:13 +0000 CST  2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        2017-01-20 11:16:21 +0800 CST  A20157A7B2FEC4670626DAE0F4C0073C  oss://bucket1/tobj
        UploadID Number is: 4
         
    9) ossutil ls oss://bucket1/obj -a 
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        Object Number is: 1
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:43:13 +0000 CST  2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 3

    10) ossutil ls oss://bucket1/obj -a -s 
        oss://bucket1/obj1
        Object Number is: 1
        UploadID                          ObjectName
        15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 3

    11) ossutil ls oss://bucket1/obj -a -s --marker=obj1 
        Object Number is: 0
        UploadID                          ObjectName
        3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 1

    12) ossutil ls oss://bucket1/obj -a -s --limited-num=2 
        oss://bucket1/obj1
        Object Number is: 1
        UploadID                          ObjectName
        15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        UploadID Number is: 1

    13) ossutil ls oss://bucket1/%e4%b8%ad%e6%96%87 --encoding-type url
        LastModifiedTime                   Size(B)  StorageClass   ETAG                                  ObjectName
        2017-03-17 17:34:40 +0800 CST      8345742      Standard   BBCC8C0954B869B4A6B34D9404C5BCFD      oss://bucket1/中文
        Object Number is: 1
        0.066567(s) elapsed

OPTIONS

    -s, --short-format
        Show by short format, if the option is not specified, show long format by default.

    -d, --directory
        Return matching subdirectory names instead of contents of the subdirectory.

    -m, --multipart
        Indicate that the subject of the command are uncompleted Multipart Uploads, instead of objects(which is the subject in default situation.

    -a, --all-type
        Indicate that the subject of the command contains both objects and uncompleted Multipart Uploads.

    --limited-num=-1
        the limited number of return results.

    --marker
        the marker of bucket when list buckets, or the marker of key when list object or Multipart Uploads.

    --upload-id-marker
        the marker of object when list object or Multipart Uploads.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Remove Bucket or Objects

SYNTAX

    ossutil rm oss://bucket[/prefix] [-r] [-b] [-f] [-c file]

DETAIL DESCRIPTION

    The command remove bucket or objects, in some case remove both. Please use the 
    command carefully!! 
    Make sure the objects can be removed before useing the command to remove objects! 
    Make sure the bucket and objects inside can be removed before useing the command 
    to remove bucket!

        (1) Remove single object, see usage 1)
        (2) Remove bucket, don't remove objects inside, see usage 2)
        (3) Batch remove many objects, reserve bucket, see usage 3)
        (4) Remove bucket and objects inside, see usage 4)

        When remove bucket, the --bucket option must be specified.
        If --force option is specified, remove silently without asking user to confirm the 
        operation.  

        Result: if no error displayed before show elasped time, then the target is removed 
        successfully.

    By default, when remove object, ossutil will reserve the uncompleted multipart upload 
    tasks whose object name match the specified cloud_url, if you want to remove those multipart 
    upload tasks, please specify --multipart option. Note: ossutil will remove all the multipart 
    upload tasks of the specified cloud_url, remove a special single multipart upload task 
    is unsupported. 

    If you need to remove object and the multipart upload tasks whose object name match the 
    specified cloud_url meanwhile, please use --all-type option.

    Note: remove the multipart upload tasks uncompleted will cause upload the part fail next 
    time. Because cp command use multipart upload to realize resume upload/download/copy, so 
    remove the multipart upload tasks uncompleted may cause resume upload/download/copy fail 
    the next time(Error: NoSuchUpload). If you want to reupload/download/copy the entire file 
    again, please remove the checkpoint file in checkpoint directory. 

Usage:

    There are four usages:

    1) ossutil rm oss://bucket/object
        (Remove single object)
        If you remove without --recursive and --bucket option, ossutil remove the single 
    object specified in cloud_url. In the usage, please make sure cloud_url exactly specified 
    the object you want to remove, ossutil will not treat object as prefix and remove prefix 
    matching objects. No matter --force is specified or not, ossutil will not show prompt 
    question.
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    of the specified object.
        If --all-type option is specified, ossutil will remove the specified object along 
    with the multipart upload tasks of the specified object. 

    2) ossutil rm oss://bucket -b [-f]
        (Remove bucket, don't remove objects inside)
        If you remove with --bucket option, without --recursive option, ossutil try to 
    remove the bucket, if the bucket is not empty, error occurs. In the usage, please make 
    sure cloud_url exactly specified the bucket you want to remove, or error occurs. If --force 
    option is specified, ossutil will not show prompt question. 

    3) ossutil rm oss://bucket[/prefix] -r [-m] [-a] [-f]
        (Remove objects, reserve bucket)
        If you remove with --recursive option, without --bucket option, ossutil remove all 
    the objects that prefix-matching the cloud_url you specified(empty prefix means all 
    objects in the bucket), bucket will be reserved because of missing --bucket option.
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    whose object name start with the specified prefix.
        If --all-type option is specified, ossutil will remove the objects with the specified 
    prefix along with the multipart upload tasks whose object name start with the specified 
    prefix. 

    4) ossutil rm oss://bucket[/prefix] -r -b [-a] [-f] 
        (Remove bucket and objects inside)
        If you remove with both --recursive and --bucket option, after ossutil removed all 
    the prefix-matching objects, ossutil will try to remove the bucket together. If user want 
    to remove bucket and objects inside, the usage is recommended. If --force option is 
    specified, ossutil will not show prompt question. 
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    whose object name start with the specified prefix.
        If --all-type option is specified, ossutil will remove the objects with the specified 
    prefix along with the multipart upload tasks whose object name start with the specified 
    prefix. 


	Invalid Usage: 
    1) ossutil rm oss://bucket/object -m -b [-f]
		It's invalid to remove the bucket right after remove uncompleted upload tasks of single 
    object.
    2) ossutil rm oss://bucket/object -a -b [-f]
        It's invalid to remove the bucket right after remove the object and uncompleted upload 
    tasks of the single object you specified.

SAMPLE

    ossutil rm oss://bucket1/obj1
    ossutil rm oss://bucket1/obj1 -m
    ossutil rm oss://bucket1/obj1 -a
    ossutil rm oss://bucket1/objdir -r 
    ossutil rm oss://bucket1/multidir -m -r 
    ossutil rm oss://bucket1/dir -a -r 
    ossutil rm oss://bucket1 -b
    ossutil rm oss://bucket2 -r -b -f
    ossutil rm oss://bucket2 -a -r -b -f
    ossutil rm oss://bucket2/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -b, --bucket
        the option used to make sure the operation will operate on bucket

    -f, --force
        operate silently without asking user to confirm the operation.

    -m, --multipart
        Indicate that the subject of the command are uncompleted Multipart Uploads, instead of objects(which is the subject in default situation.

    -a, --all-type
        Indicate that the subject of the command contains both objects and uncompleted Multipart Uploads.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Display meta information of bucket or objects

SYNTAX

    ossutil stat oss://bucket[/object] [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command display the meta information of bucket or objects. The object meta information 
    setted through set-meta command, can be check by the command.

Usage：

    There are three usages:    

    1) ossutil stat oss://bucket [--encoding-type url]
        ossutil display bucket meta info, include creation date, location, extranet endpoint, 
    intranet endpoint, Owner and acl info.

    2) ossutil stat oss://bucket/object [--encoding-type url]
        ossutil display object meta info, include file size, last modify time, etag, content-type, 
    user meta etc.

SAMPLE

    ossutil stat oss://bucket1
    ossutil stat oss://bucket1/object  
    ossutil stat oss://bucket1/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Set acl on bucket or objects

SYNTAX

    ossutil set-acl oss://bucket[/prefix] [acl] [-r] [-b] [-f] [-c file]

DETAIL DESCRIPTION

    The command set acl on the specified bucket or objects. If you use the command 
    witout acl information, ossutil will ask user for it.

    (1) set acl on bucket, see usage 1)
    (2) set acl on single object, see usage 2)
    (3) batch set acl on many objects, see usage 3)

    When set acl on bucket, the --bucket option must be specified. 
    Set acl on bucket an objects inside simultaneously is not supported, please 
    operate independently.

    Result: if no error displayed before show elasped time, then the setting is completed successfully.
    User can use stat command to check the acl information of bucket or objects.

ACL:

    ossutil supports following bucket acls, shorthand versions in brackets:
        public-read-write
        public-read
        private

    ossutil support following objet acls:
        public-read-write
        public-read
        private
        default

    More information about acl see ACL Control in https://help.aliyun.com/document_detail/31867.html?spm=5176.doc31960.6.147.8dVwsh.

Usage：

    There are three usages:    

    1) ossutil set-acl oss://bucket [acl] -b [-c file]
        If --bucket option is specified, ossutil will try to set acl on bucket. In the 
    usage, please make sure cloud_url exactly specified the bucket you want to set acl 
    on, and --recursive option is not supported here. No matter --force option is specified 
    or not, ossutil will not show prompt question. If acl information is missed, ossutil 
    will enter interactive mode and ask you for it. 

    2) ossutil set-acl oss://bucket/object [acl] [-c file]
        The usage set acl on single object, if object not exist, error occurs. In the 
    usage, please make sure cloud_url exactly specified the object you want to set acl 
    on, and --recursive option is not specified(or ossutil will search for prefix-matching 
    objects and set acl on those objects). No matter --force option is specified or not, 
    ossutil will not show prompt question. If acl information is missed, ossutil will 
    enter interactive mode and ask you for it. 

    3) ossutil set-acl oss://bucket[/prefix] [acl] -r [-f] [-c file]
        The usage can set acl on many objects, --recursive option is required for the 
    usage, ossutil will search for prefix-matching objects and set acl on those objects. 
    If an error occurs, ossutil will record the error message to report file, and ossutil 
    will continue to attempt to set acl on the remaining objects(more information see 
    help of cp command). In the usage, --bucket option is not supported, which means set 
    acl on bucket an objects inside simultaneously is not supported. If --force option 
    is specified, ossutil will not show prompt question. If acl information is missed, 
    ossutil will enter interactive mode and ask you for it. 
        If --include/--exclude option is specified, ossutil will search for pattern-matching 
    objects and set meta on those objects.
        --include and --exclude option, please refer cp command help.

SAMPLE

    (1)ossutil set-acl oss://bucket1 public-read-write -b 

    (2)ossutil set-acl oss://bucket1/obj1 private 

    (3)ossutil set-acl oss://bucket1/obj default -r
       ossutil set-acl oss://bucket1/obj default -r --include "*.jpg"
       ossutil set-acl oss://bucket1/obj default -r --exclude "*.jpg"

    (4)ossutil set-acl oss://bucket1/%e4%b8%ad%e6%96%87 default --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -b, --bucket
        the option used to make sure the operation will operate on bucket

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    set metadata on already uploaded objects

SYNTAX

    ossutil set-meta oss://bucket[/prefix] [header:value#header:value...] [--update] [--delete] [-r] [-f] [-c file]

DETAIL DESCRIPTION

    The command can be used to set, update or delete the specified objects' meta data. 
    If --recursive option is specified, ossutil find all matching objects and batch set 
    meta on these objects, else, ossutil set meta on single object, if the object not 
    exist, error happens. 

    (1) Set full meta: If --update option and --delete option is not specified, ossutil 
        will set the meta of the specified objects to [header:value#header:value...], what
        user inputs. If [header:value#header:value...] is missing, it means clear the meta 
        data of the specified objects(to those headers which can not be deleted, that is, 
        the headers do not start with: X-Oss-Meta-, the value will not be changed), at the 
        time ossutil will ask user to confirm the input.

    (2) Update meta: If --update option is specified, ossutil will update the specified 
        headers of objects to the values that user inputs(the values can be empty), other 
        meta data of the specified objects will not be changed. --delete option is not 
        supported in the usage. 

    (3) Delete meta: If --delete option is specified, ossutil will delete the specified 
        headers of objects that user inputs(to those headers which can not be deleted, 
        that is, the headers do not start with: X-Oss-Meta-, the value will not be changed), 
        in this usage the value must be empty(like header: or header), other meta data 
        of the specified objects will not be changed. --update option is not supported 
        in the usage.

    The meta data of bucket can not be setted by the command, please use other commands. 
    User can use stat command to check the meta information of bucket or objects.

Headers:

    ossutil supports following headers:
        Content-Type
        Content-Disposition
        Expires(time.RFC3339: 2006-01-02T15:04:05Z07:00)
        Accept-Encoding
        X-Oss-Server-Side-Encryption
        X-Oss-Object-Acl
        Cache-Control
        Content-Encoding
        Origin
        and headers starts with: X-Oss-Meta-

    Warning: headers are case-insensitive, but value are case-sensitive.

Usage:

    There are two usages:

    1) ossutil set-meta oss://bucket/object [header:value#header:value...] [--update] [--delete] [-f] 
        If --recursive option is not specified, ossutil set meta on the specified single 
    object. In the usage, please make sure cloud_url exactly specified the object you want to 
    set meta on, if object not exist, error occurs. If --force option is specified, ossutil 
    will not show prompt question. 
        The usage of --update option and --delete option is showed in detailHelpText. 

    2) ossutil set-meta oss://bucket[/prefix] [header:value#header:value...] -r [--update] [--delete] [-f]
        If --recursive option is specified, ossutil will search for prefix-matching objects 
    and set meta on these objects. If an error occurs, ossutil will record the error message 
    to report file, and ossutil will continue to attempt to set acl on the remaining objects(
    more information see help of cp command). 
        If --include/--exclude option is specified, ossutil will search for pattern-matching objects and 
    set meta on those objects. 
	    --include and --exclude option, please refer cp command help.
        If --force option is specified, ossutil will not show prompt question.
        The usage of --update option and --delete option is showed in detailHelpText.

SAMPLE

    (1)ossutil set-meta oss://bucket1/obj1 Cache-Control:no-cache#Content-Encoding:gzip#X-Oss-Meta-a:b
        Set Cache-Control, Content-Encoding and X-Oss-Meta-a header for obj1

    (2)ossutil set-meta oss://bucket1/o X-Oss-Meta-empty:#Content-Type:plain/text -u -r
        Batch update X-Oss-Meta-empty and Content-Type header on objects that start with o

    (3)ossutil set-meta oss://bucket1/ X-Oss-Meta-empty:#Content-Type:plain/text --update -r --include "*.jpg"
        Batch update X-Oss-Meta-empty and Content-Type header on objects ending with .jpg

    (4)ossutil set-meta oss://bucket1/o X-Oss-Meta-empty:#Content-Type:plain/text --update -r --exclude ".jpg"
        Batch update X-Oss-Meta-empty and Content-Type header on objects starting with o and ending with .jpg

    (5)ossutil set-meta oss://bucket1/obj1 X-Oss-Meta-delete -d
        Delete X-Oss-Meta-delete header of obj1 

    (6)ossutil set-meta oss://bucket/o -r
        Batch set the meta of objects that start with o to empty

    (7)ossutil set-meta oss://bucket1/%e4%b8%ad%e6%96%87 X-Oss-Meta-delete --delete --encoding-type url
        Delete X-Oss-Meta-delete header of oss://bucket1/中文

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -u, --update
        update

    --delete
        delete

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    Upload, Download or Copy Objects

SYNTAX

    ossutil cp file_url cloud_url  [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir] [--snapshot-path=sdir]
    ossutil cp cloud_url file_url  [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir] [--range=x-y] 
    ossutil cp cloud_url cloud_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir]

DETAIL DESCRIPTION

    The command allows: 
    1. Upload file from local file system to oss 
    2. Download object from oss to local file system
    3. Copy objects between oss
    Which matches with the following three kinds of operations:
        ossutil cp file_url oss://bucket[/prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--snapshot-path=sdir]
        ossutil cp oss://bucket[/prefix] file_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--range=x-y]
        ossutil cp oss://src_bucket[/src_prefix] oss://dest_bucket[/dest_prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] 

    file_url means the file in local file system, it supports relative path and absolute 
    path, the usage of file_url is same with your local file system. oss://bucket[/prefix] 
    means object in oss, it supports prefix matching, but not support wildcard.

    ossutil sperate file of local system and oss objects by the prefix of oss://, which means 
    if the url starts with oss://, ossutil considers it as object, else, ossutil considers it 
    as file in local system. 

    Note: when copy between oss, ossutil only support copy objects, the uncompleted Multipart 
    Uploads are not supported.


--recursive option:

    (1) Upload file to oss: if file_url is directory, the --recursive option must be specified. 

    (2) When download objects or copy objects between oss:
        If --recursive option is not specified, ossutil download or copy the specified single 
    object, in the usage, please make sure url exactly specified the object you want to set meta 
    on, if object not exist, error occurs. 
        If --recursive option is specified, ossutil will search for prefix-matching objects and 
    download or copy these objects. If error occurs, objects which has been download or copyed 
    will not rollback. 

    By default, if an error occurs to a file in batch upload(/download/copy) files operation, 
    ossutil will continue to attempt to copy the remaining files, and ossutil will record the 
    error message to report file. The files succeed copied will not be recorded to report file.   

    Note: Ossutil will print error information and exit, instead of continue to run if an error 
    occurs in batch upload(/download/copy) files operation in several situations:
    (1) If the error occurs before of entering the upload(/download/copy) iteration, ossutil will 
        print error message and return, and the report file will not be generated. eg. user enter 
        an invalid cp command.
    (2) If the error occurs during upload(/download/copy) iteration is: NoSuchBucket, AccessDenied 
        caused by unauthorized authentication and other errors. ossutil will print error message 
        and return, the report file that has been generated will not be deleted.

    Report file name is: ossutil_report_Date_Time.report. Report file is one kind 
    of output files, and will be putted in output directory, the directory can be specified by 
    --output-dir option or outputDir option in config file. If it's not specified, ossutil will use 
    the default directory: ossutil_output in current directory.

    Note: ossutil will not mainten the report file, please check and clear your output directory 
    regularlly to avoid too many report files in your output directory. 

--include and --exclude option:

    When --recursive is specified, these parameters perform pattern matching to either exclude or
    include a particular file or object. By default, all files/objects are included.

    The following pattern symbols are supported.
    *: Matches everything
    ?: Matches any single character
    [sequence]: Matches any character in sequence
    [!sequence]: Matches any character not in sequence
    Note: does not support patterns containing directory info. e.g., --include "/usr/*/test/*.jpg" 

    Any number of these parameters can be passed to a command. You can do this by providing an --exclude
    or --include argument multiple times, e.g.,
      --include "*.txt" --include "*.png". 
    When there are multi filters, the rule is the filters that appear later in the command take precedence
    over filters that appear earlier in the command. e.g.,

    --exclude "*" --include "*.txt"
    All files will be excluded from the command except for files ending with .txt

    --include "*.txt" --exclude "*"
    All files will be excluded from the command.

    e.g., 3 files in current dir
    testfile1.jpg
    testfiel2.txt
    testfile33.jpg

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg'
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg' --include 'testfile*.jpg'
    upload testfile1.jpg to oss://my-bucket/path/testfile1.jpg
    upload testfile33.jpg to oss://my-bucket/path/testfile33.jpg
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg' --include 'testfile*.jpg' --exclude 'testfile?.jpg'
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt
    upload testfile33.jpg to oss://my-bucket/path/testfile33.jpg

--meta option

    This option will set the specified objects' meta data. If --recursive option is specified, 
    ossutil will set meta for all uploaded objects.  

    ossutil supports following headers:
        X-Oss-Server-Side-Encryption
        X-Oss-Object-Acl
        Content-Type
        Content-Disposition
        Expires(time.RFC3339: 2006-01-02T15:04:05Z07:00)
        Accept-Encoding
        Cache-Control
        Content-Encoding
        Origin
        and headers starts with: X-Oss-Meta-

    Note: headers are case-insensitive, but value are case-sensitive. After setting, origin meta will be
    replaced with specified meta. HTTP HEADER will be reserved if no speified value. User meta will be
    deleted if no specified value.

--acl option

    This option will set acl on the specified objects. If --recursive option is specified, 
    ossutil will set acl for all uploaded objects.  

    ossutil support following objet acls:
        public-read-write
        public-read
        private
        default

    More information about acl see ACL Control in https://help.aliyun.com/document_detail/31867.html?spm=5176.doc31960.6.147.8dVwsh.

--output-dir option
    
    The option specify the directory to deposit output file generated by ossutil, the default value 
    is: ossutil_output in current directory. If the directory specified not exist, ossutil will 
    create the directory automatically, if it exists but is not a directory, ossutil will return an 
    error.  

    Output file contains: report file which used to record error message generated by cp command, 
    set-acl, set-meta, restore command.


Incremental Upload/Download/Copy:

--update option(-u)

    Use the --update option to copy only when the source file is newer than the destination file 
    when the destination file is missing. If --update option is specified, when the destionation 
    file is existed, ossutil will not prompt and copy when newer, no matter if --force option is 
    specified or not.
    The option can be used when batch copy failed, skip the succeed files in retry.

--snapshot-path option

    This option is used to accelerate the incremental upload of batch files in certain scenarios(
    currently, download and copy do not support this option). The scenarios is: lots of files and 
    no other user updated the corresponding object in oss during the two uploads.
    
    If you use the option when batch copy files, ossutil will generate files to record the snapshot 
    information in the specified directory. When the next time you upload files with the option, 
    ossutil will read the snapshot information under the specified directory for incremental upload. 
    The snapshot-path you specified must be a local file system directory can be written in, if the 
    directory does not exist, ossutil creates the files for recording snapshot information, else 
    ossutil will read snapshot information from the directory for incremental upload(ossutil will 
    only upload the files which has not been successfully upload to oss and the files has been locally 
    modified), and update the snapshot information to the directory. 
    
    Note: 
    (1) The option record the lastModifiedTime of local files which has been successfully upload in 
        local file system, and compare the lastModifiedTime of local files in the next cp to decided 
        whether to skip the upload of the files, so if you use the option to achieve incremental upload, 
        please make sure no other user updated the corresponding object in oss during the two uploads. 
        If you can not guarantee the scenarios, please use --update option to achieve incremental upload. 
    (2) Ossutil does not automatically delete snapshot-path snapshot information, in order to avoid too 
        much snapshot information, when the snapshot information is useless, please clean up your own 
        snapshot-path on your own.
    (3) Due to the extra cost of reading and writing snapshot information, if the file num is not very big, 
        or the network condition is good, or there may be some other users to modify the corresponding 
        object in oss during the two uploads, it's not suggested to use the option. you can use --update 
        option for incremental upload. 

Note: --update option and --snapshot-path can be used together, ossutil priority will be based on snapshot 
    information to determine whether to skip upload, if not satisfied, ossutil will then based on --update 
    to determine whether to skip upload. If any of those two policies is specified, ossutil will ingnore 
    --force option, which means whether or not the destionation file exists, ossutil will not ask user 
    whether to replace the file, and determine whether to upload according to incremental upload policies.

    Incremental download will not consider the value of --range option, and only consider whether file 
    exists and lastModifiedTime. Which means even if the range changs between two download, ossutil will 
    skip the files which satisfy the incremental download condition, so, please avoid to use both!


Other Options:

--force option

    If the file dest_url specified is existed, and --update and --snapshot-path option is not specified, 
    ossutil will ask if replace the file(if the input is invalid, the file will not be replaced). If 
    --force option is specified here, ossutil will not prompt, replace by force. The option is useful 
    only when --update and --snapshot-path option is not specified. 

--range option
    
    If user need to range download a file, we can use --range option, if we use the option, then 
    resume copy of big file and multi-thread copy is ineffective.
    
    The offset of file is start 
    with 0, there are three forms: 0-9 or 3- or -9.
        eg: --range=0-9, means download the first to the tenth character of the file.
        --range=3-, means download the fourth character to the end of the file.
        --range=-9, means download the last nine character of the file.
    If the range exceed the file actual scope, will download the whole file.
    More information about range see: https://help.aliyun.com/document_detail/31980.html?spm=5176.doc31994.6.860.YH7LL1

    If you need to download the whole file, please do not specify the option.
    The option is not supported for upload and copy files. 

    Note: Incremental download(-u option) will not conside --range option. Which means even if the 
    range changs between two download, ossutil will skip the files which satisfy the incremental 
    download condition, so, please avoid to use both!

--encoding-type option
    
    If the --encoding-type option is setted to url, it means the object name and file name are url 
    endcoded.


Resume copy of big file:

    If the size of source file is bigger than what --bigfile-threshold option specified(default: 
    100M), ossutil will consider the file as a big file, and use resume copy policy to these files:
    (1) Upload file to oss: ossutil will split the big file to many parts, use multipart upload. If 
        upload is failed, ossutil will record failure information in .ossutil_checkpoint directory 
        in local file system. When retry, ossutil will read the checkpoint information and resume 
        upload, if the upload is succeed, ossutil will remove the .ossutil_checkpoint directory. 
    (2) Download object from oss: ossutil will split the big file to many parts, range get each part. 
        If download is failed, ossutil wll record failure information in .ossutil_checkpoint directory 
        in local file system. If success, ossutil will remove the directory.
    (3) Copy between oss: ossutil will split the big file to many parts, use Upload Part Copy, and 
        record failure information in .ossutil_checkpoint directory in local file system. If success, 
        ossutil will remove the directory.

    Warning:
    1) Resume copy will not be implemented on small file, if failure happens, ossutil will copy the 
        whole file the next time.
    2) In operation (1) and (3), if failure happens, uploadId that has not been completed may appear in 
        oss. If the operation success after retry, these uploadId will be completed automatically. 
    3) When upload file to oss, if .ossutil_checkpoint directory is included in file_url, .ossutil_checkpoint 
        will not be uploaded to oss. The path of checkpoint directory can be specified by --checkpoint-dir 
        option, please make sure the directory you specified can be removed.
    4) If you remove the uncompleted multipart upload tasks by rm command, may cause resume upload/download/copy 
        fail the next time(Error: NoSuchUpload). If you want to reupload/download/copy the entire file again, 
        please remove the checkpoint file in checkpoint directory.


Performance Tuning:

--jobs option or --parallel option (Concurrency Control)

    --jobs option controls the amount of concurrency tasks between multi-files, --parallel option controls 
    the amount of concurrency tasks when work with a file. In default situation, ossutil will calculate the 
    parallel num according to file size(the option is useless to small file, the file size to use multipart 
    upload can be specified by --bigfile-threshold option). When batch upload/download/copy files, the total 
    concurrency tasks num is jobs num multiply by parallel num. The two option can be specified by user, if 
    the performance of default setting is poor, user can adjust the two options. 

    Note:
    1) If the parallels and jobs number are too big, because of the switching between threads, the performance 
    of upload/download/copy may decline, so please set the options according to your machine condition. If need 
    performance tuning, user can set the two options to two small numbers at first and increase them step by step. 
    2) If the parallels and jobs number are too big, in the case of limited machine resources, error "EOF" may 
    occur due to the network transfer too slow, in this situation, please reduce the --jobs and --parallel num. 

--part-size option

    The option specify the part size of resume upload/download/copy of big file. In default situation, ossutil 
    will calculate the part size and parallel according to file size. When performance tuning or some other needs, 
    user can set the option.     

    If the option is specified, part num is: ceil(file size/part size). Note that if --parallel value is bigger 
    than part num, the extra parallel is feeble, the actual parallel will be part num.

    If the part size is too small, it may influence ossutil file upload/download/copy performance, if the part 
    size is too big, it may influence the actual parallel num, so, please if specify the option, please set it 
    to a reasonable value. 


Batch file migration:

    ossutil support batch file migration by transfer files through local file system, the usual usage is: 
    (1) Batch file upload:
        ossutil cp your_dir oss://your_bucket -r -f -u
    (2) Batch file download:
        ossutil cp oss://your_bucket your_dir -r -f -u
    (3) File copy between buckets in the same region：
        ossutil cp oss://your_src_bucket oss://your_dest_bucket -r -f -u

    The meaning of every option, see help above.
    After each migration, please check your report file.

    When batch file upload, if the file num is big and no other user modified the corresponding object in 
    oss during the two uploads, you can use --snapshot-path to accelerate the incremental upload, see more 
    information in help text of --snapshot-path option above. 
    The command is: 
        ossutil cp your_dir oss://your_bucket -r -f -u --shapshot-path=your-path


Usage:

    There are three usages:

    1) ossutil cp file_url oss://bucket[/prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--snapshot-path=sdir]
        The usage upload file in local system to oss. file_url can be file or directory. If file_url 
    is file, no matter --recursive option is specified or not will not affect the result. If file_url 
    is directory, even if the directory is empty or only contains one file, we must specify --recursive 
    option. Mind that, ossutil will upload all sub files and directories(include empty directory) inside 
    file_url to oss, but differe from shell cp, the first level directory specified by file_url will not 
    be upload to oss. 
    Object Naming Rules:
        If file_url is file: if prefix is empty or end with "/", object name is: dest_url + file name.
                             else, object name is: dest_url.
        If file_url is directory: if prefix is empty or end with "/", object name is: dest_url + file path relative to file_url.
        
    2) ossutil cp oss://bucket[/prefix] file_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--range=x-y] 
        The usage download one or many objects to local system. If --recursive option is not specified, 
    ossutil considers src_url exactly specified the single object you want to download, prefix-matching 
    is not supported now, if the object not exists, error occurs. If --recursive option is specified, 
    ossutil will search for prefix-matching objects and batch download those objects, at this time file_url 
    must be directory, if the directory not exists, ossutil will create the directory automatically.
    File Naming Rules:
        If file_url is file, ossutil download file to the path of file_url, and the file name is got from file_url.
        If file_url is directory, ossutil download file to the directory, and the file name is: object name.
    Warning: If the object name is end with / and size is zero, ossutil will create a directory in local 
    system, instead of creating a file.

    3) ossutil cp oss://src_bucket[/src_prefix] oss://dest_bucket[/dest_prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] 
        The usage copy objects between oss. The src_bucket can be same with dest_bucket. Pay attention 
    please, if src_url is the same with dest_url, ossutil will do nothing but exit after prompt. Set meta 
    please use "set-meta" command. If --recursive option is not specified, ossutil considers src_url exactly 
    specified the single object you want to copy. If --recursive option is specified, ossutil will search 
    for prefix-matching objects and batch copy those objects. 

    Warning: when batch copy, it's not allowed that src_url is the prefix of dest_url, because recursivlly 
    copy will happen under the situation. dest_ur is the prefix of src_url is not allowed too, because of 
    covering source file. But they are allowed in single file copy.

    Object Naming Rules:
        If src_url is one object: if prefix of dest_object is empty or end with "/", object name is: dest_url + object name exclude parenet directory path. 
                                  else, object name is: dest_url.
        If src_url means multiple objects: object name is: dest_url+ source object name exclude src_prefix.

SAMPLE

    1) Upload to oss
    Suppose there are directory local_dir in local system, 
        local_dir contains file a, b directory c, d, 
        c is empty, d contains file dd.
    
    ossutil cp local_dir/a oss://bucket1
    Generate:
        oss://bucket1/a

    ossutil cp local_dir/a oss://bucket1/b
    Generate:
        oss://bucket1/b

    ossutil cp local_dir/a oss://bucket1/b/
    Generate:
        oss://bucket1/b/a

    ossutil cp local_dir oss://bucket1/b/
    Error

    ossutil cp local_dir oss://bucket1/b -r
    Generate:
        oss://bucket1/b/a
        oss://bucket1/b/b
        oss://bucket1/b/c/
        oss://bucket1/b/d/
        oss://bucket1/b/d/dd

    ossutil cp local_dir oss://bucket1/b -r
    If an 5xx error occurs while upload a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to upload the remaining files.

    ossutil cp local_dir oss://bucket1/b -r --output-dir=your_dir 
    If an 5xx error occurs while upload a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and continue to upload the remaining files.

    ossutil cp local_dir oss://bucket1/b -r -u
    Use --update policy for incremental upload

    ossutil cp local_dir oss://bucket1/b -r --snapshot-path=your_local_path
    Use --snapshot-path policy for incremental upload

    ossutil cp local_dir oss://bucket1/b -r -u --snapshot-path=your_local_path
    Use --snapshot-path and --update policies for incremental upload

    ossutil cp %e4%b8%ad%e6%96%87 oss://bucket1/%e6%b5%8b%e8%af%95 --encoding-type url
    Upload the file "中文" to oss://bucket1/测试

    2) download from oss
    Suppose there are following objects in oss:
        oss://bucket/abcdir1/a
        oss://bucket/abcdir1/b
        oss://bucket/abcdir1/c
        oss://bucket/abcdir2/a/
        oss://bucket/abcdir2/b/e
    And size of oss://bucket/abcdir2/a/ is zero. 

    ossutil cp oss://bucket/abcdir1/a b
    Generate file b

    ossutil cp oss://bucket/abcdir1/a b/
    Generate file a under directory b

    ossutil cp oss://bucket/abcdir1/a b/ --range=30-90
    Generate file a under directory b, the content is the thirty-first character to the ninety-first character of object abcdir1/a.

    ossutil cp oss://bucket/abcdir2/a/ b
    If b exists and is a file, error occurs.
    If b exists and is a directory, generate directory a under directory b.

    ossutil cp oss://bucket/abc b
    Error: object not exist

    ossutil cp oss://bucket/abc b -r
    If b exists and is a file, error occurs.
    Else generate directory dir1, dir2,
        generate file a, b, c in dir1,
        generate directory a, b in dir2, generate file e in directory b.
        
    ossutil cp oss://bucket/ local_dir -r
    If an 5xx error occurs while download a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to download the remaining files.

    ossutil cp oss://bucket/ local_dir -r --output-dir=your_dir
    If an 5xx error occurs while download a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and download to upload the remaining files.

    ossutil cp oss://bucket/ local_dir -r -u
    Use --update policy for incremental download

    ossutil cp oss://bucket1/%e6%b5%8b%e8%af%95 %e4%b8%ad%e6%96%87 --encoding-type url
    Download oss://bucket1/测试 to local file：中文 

    3) Copy between oss 
    Suppose there are following objects in oss:
        oss://bucket/abcdir1/a
        oss://bucket/abcdir1/b
        oss://bucket/abcdir1/c
        oss://bucket/abcdir2/a/
        oss://bucket/abcdir2/b/e

    ossutil cp oss://bucket/abcdir1/a oss://bucket1
    Generate:
        oss://bucket1/a

    ossutil cp oss://bucket/abcdir1/a oss://bucket1/b
    Generate:
        oss://bucket1/b

    ossutil cp oss://bucket/abcdir1/a oss://bucket/abcdir1/a/ 
    Generate:
        oss://bucket/abcdir1/a/a

    ossutil cp oss://bucket/abcdir1/a/ oss://bucket/abcdir1/b/ 
    Generate:
        oss://bucket/abcdir1/b/a/

    ossutil cp oss://bucket/abcdir1/a oss://bucket/abcdir1/a/ -r 
    Error, recursivlly copy

    ossutil cp oss://bucket/abcdir1/a oss://bucket1/b/
    Generate:
        oss://bucket1/b/a

    ossutil cp oss://bucket/abc oss://bucket1/b/
    Error: object not exist

    ossutil cp oss://bucket/abc oss://bucket1/123 -r
    Generate:
        oss://bucket1/123dir1/a
        oss://bucket1/123dir1/b
        oss://bucket1/123dir1/c
        oss://bucket1/123dir2/a/
        oss://bucket1/123dir2/b/e

    ossutil cp oss://bucket/abc oss://bucket1/123/ -r
    Generate:
        oss://bucket1/123/dir1/a
        oss://bucket1/123/dir1/b
        oss://bucket1/123/dir1/c
        oss://bucket1/123/dir2/a/
        oss://bucket1/123/dir2/b/e

    ossutil cp oss://bucket/ oss://bucket1/ -r
    If an 5xx error occurs while copy a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to copy the remaining files.

    ossutil cp oss://bucket/ oss://bucket1/ -r --output-dir=your_dir 
    If an 5xx error occurs while copy a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and continue to copy the remaining files.

    ossutil cp oss://bucket/ oss://bucket1/ -r -u
    Use --update policy for incremental copy

    ossutil cp oss://bucket1/%e6%b5%8b%e8%af%95 oss://bucket2/%e4%b8%ad%e6%96%87 --encoding-type url
    Copy oss://bucket1/测试 to oss://bucket2/中文

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -f, --force
        operate silently without asking user to confirm the operation.

    -u, --update
        update

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.

    --bigfile-threshold=104857600
        the threshold of file size, the file size larger than the threshold will use resume upload or download(default: 104857600), value range is: 0-9223372036854775807

    --part-size=-1
        Part size, the unit is: Byte, in default situation, ossutil will calculate the suitable part size according to file size. The option is useful when user has special needs or user need to performance tuning, the value range is: 1-9223372036854775807(Byte)

    --checkpoint-dir=.ossutil_checkpoint
        Path of checkpoint directory(default:.ossutil_checkpoint), the directory is used in resume upload or download, when operate failed, ossutil will create the directory automatically, and record the checkpoint information in the directory, when the operation is succeed, the directory will be removed, so when specify the option, please make sure the directory can be removed.

    --range
        the range when download objects, the form is like: 3-9 or 3- or -9

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    --meta
        Set object meta as [header:value#header:value...], e.g., Cache-Control:no-cache#Content-Encoding:gzip

    --acl
        acl information.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --parallel
        amount of concurrency tasks when work with a file, value range is: 1-10000, by default the value will be decided by ossutil intelligently.

    --snapshot-path
        This option is used to accelerate the incremental upload of batch files in certain scenarios(currently, download and copy do not support this option). If you use the option when batch copy files, ossutil will generate files to record the snapshot information in the specified directory. When the next time you upload files with the option, ossutil will read the snapshot information under the specified directory for incremental upload. The snapshot-path you specified must be a local file system directory can be written in, if the directory does not exist, ossutil creates the files for recording snapshot information, else ossutil will read snapshot information from the path for incremental upload(ossutil will only upload the files which has not been successfully upload to oss and the files has been locally modified), and update the snapshot information to the directory. Note: The option record the lastModifiedTime of local files which has been successfully upload in local file system, and compare the lastModifiedTime of local files in the next cp to decided whether to skip the upload of the files, so if you use the option to achieve incremental upload, please make sure no other user modified the corresponding object in oss during the two uploads. If you can not guarantee the scenarios, please use --update option to achieve incremental upload. In addition, ossutil does not automatically delete snapshot-path snapshot information, in order to avoid too much snapshot information, when the snapshot information is useless, please clean up your own snapshot-path on your own.

    --disable-crc64
        Disable crc64, in default situation, ossutil open crc64 check when transmit data.



SYNOPSIS

    Restore Frozen State Object to Read Ready Status

SYNTAX

    ossutil restore cloud_url [--encoding-type url] [-r] [-f] [--output-dir=odir] [-c file]

DETAIL DESCRIPTION

    The command restore frozen state object to read ready status, the object must be in the storage 
    class of Archive. 

    An object of Archive storage class will be in frozen state at first.

    If user restore a frozen state object, the operation will success, and the object will be in 
    restroing status, oss will thaw the object. In this period, if user restore the object again, 
    the operation will success, but the time that the object can be downloaded will not be extended.

    When oss has finished restoring the object, the object can be downloaded.

    The time that an restored object can be downloaded is one day in default, if user restore the 
    object again during the time, the time that the object can be downloaded will be extended for 
    one day, the time can be at most extended to seven days. 

    More information about restore see: https://help.aliyun.com/document_detail/52930.html?spm=5176.doc31947.6.874.8GjVvu  


Usage:

    There are two usages:

    1) ossutil restore oss://bucket/object [--encoding-type url] 
        If --recursive option is not specified, ossutil restore the specified frozen state object 
    to readable status. In the usage, please make sure url exactly specified the object you want to 
    restore, if object not exist, error occurs. No matter --force option is specified or not, ossutil 
    will not show prompt question. 

    2) ossutil restore oss://bucket[/prefix] -r [--encoding-type url] [-f] [--output-dir=odir]
        The usage restore the objects with the specified prefix and in frozen state to readable status. 
    --recursive option is required for the usage, and ossutil will search for prefix-matching objects 
    and restore those objects. When an error occurs when restore an object, ossutil will record the 
    error message to report file, and ossutil will continue to attempt to set acl on the remaining 
    objects(more information see help of cp command). If --force option is specified, ossutil will 
    not show prompt question.

SAMPLE

    1) ossutil restore oss://bucket-restore/object-store
    2) ossutil restore oss://bucket-restore/object-prefix -r
    3) ossutil restore oss://bucket-restore/object-prefix -r -f
    4) ossutil restore oss://bucket-restore/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    Create symlink of object

SYNTAX

    ossutil create-symlink cloud_url target_object [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command create symlink of object in oss, the target object must be object in the 
    same bucket of symlink object, and the file type of target object must not be symlink. 
    So, cloud_url must be in format: oss://bucket/object, and target_object is the object 
    name of target object.  

    When create symlink:
        Will not check whether target object exists;
        Will not check whether target object type is valid;
        Will not check whether if have access permission of target object.
    The check will be done when visiting GetObject, etc.

    If the symlink object exist, and has access permission, the object newly created will 
    cover the old object.

    We can use stat command to query the target object of symlink object.

    More information about symlink see: https://help.aliyun.com/document_detail/45126.html?spm=5176.doc31979.6.870.x3Tqsh

Usage:

    ossutil create-symlink oss://bucket/symlink-object target-object

SAMPLE

    ossutil create-symlink oss://bucket1/object1 object2 
        Create symlink object named object1, which point to object2.

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Display meta information of symlink object

SYNTAX

    ossutil read-symlink oss://bucket/object [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command display the meta information of symlink object. The operation 
    requires that the user have read permission of the symlink object. If you 
    want to get the file data of symlink object, please use cp command to download 
    the symlink object. 

    The item X-Oss-Symlink-Target shows the target object of the symlink object.

    If the object is not symlink object, ossutil return error: NotSymlink.

    More information about symlink see: https://help.aliyun.com/document_detail/45146.html?spm=5176.doc31968.6.871.24y1VX 

Usage:

    ossutil read-symlink oss://bucket/symlink-object

SAMPLE

    ossutil read-symlink oss://bucket1/object1 
        Etag                    : 455E20DBFFF1D588B67D092C46B16DB6
        Last-Modified           : 2017-04-17 14:49:42 +0800 CST
        X-Oss-Symlink-Target    : a

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Get help about commands

SYNTAX

    ossutil help [command]

DETAIL DESCRIPTION

    The command provide the usage of all commands on which help is available, 
    or the usage of the specified command.

Usage:

    There are two usages:

    1) ossutil help
        The usage provides a summary of all commands, each command shows the
    synopsis and a simplified expression of the syntax.

    2) ossutil help command
        The usage provides help about the specified command, which contains
    a detailed description of the command, include samples and optional options.

SAMPLE

    ossutil help
    ossutil help help
    ossutil help ls

OPTIONS

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Create configuration file to store credentials

SYNTAX

    ossutil config [-e endpoint] [-i id] [-k key] [-t token] [-L language] [--output-dir outdir] [-c file]

DETAIL DESCRIPTION

    The command create a configuration file and stores credentials
    information user specified. Credentials information is used when
    access OSS(if a command supports --config-file option, then the 
    information is useful to the command).

    The configuration file can be specified by user, which in default
    is /Users/jxyowen/.ossutilconfig. If the configuration file exist, suppose
    the file is: a, ossutil will save a as a.bak, and rewrite file a, 
    at this time, if file a.bak exists, a.bak will be rewrited.

    Note:
    (1) If the configuration file path you specified is not the default 
    path, please specify --config-file option to the path when use other 
    commands. If you do not specify the --config-file option, ossutil 
    will read the configuration file: /Users/jxyowen/.ossutilconfig.

    (2) Several configuration can be specified through option, eg: --endpoint, 
    --access-key-id etc(for more see the help of each command). If you 
    specified those options when use command, and meanwhile those configurations 
    exist in configurations file, PRI: option > configurations file. 

    (3) If you specified --endpoint or --access-key-id or --access-key-secret 
    or --sts-token option when use command, then ossutil does not insist 
    on configurations file. 

Usage:

    There are two usages for the command, one is interactive(shows
    in 1) ), which is recommended because of safety problem. another is
    non interactive(shows in 2) ).

    1) ossutil config [-c file]
        The usage provides an interactive way to configure credentials.
    Interactively ossutil asks you for:
        (1) config file
            If user enter carriage return, ossutil use the default file: 
        /Users/jxyowen/.ossutilconfig.
            If you specified the config file, please specify --config-file 
        option to the path when use other command that needs configuration. 
        To see the commands who support --config-file option please see the 
        help of each command.
        (2) language
            When configure for the first time(config file not exit), ossutil 
        will ask user to set the language(support Chinese or English at this 
        time), if user did not input the language, ossutil will set language 
        to the value of --language option, if user did not specify --language 
        option, ossutil will set it to Chinese.
            If config file exists, ossutil will set the language according to 
        --language option and configuration in config file, instead of asking 
        user for it.
            ossutil will read the language configuration when run command, if 
        the configuration does not exist or is invalid, ossutil will show in 
        default language: EN.
            Notice that the configuration will go into effect after the config 
        command successfully executed, it's dimmed while execute the command.
        (3) endpoint, accessKeyID, accessKeySecret
            Carriage return means skip the configuration of these options.
        Note: Endpoint means a second-level domain(SLD), eg: oss.aliyuncs.com.
            The three options are necessary in normal condition.
        (4) stsToken
            If you use stsToken to access oss, please enter your stsToken. If not, 
        please enter carriage return to skip the configuration.
            For more information about stsToken, see: https://help.aliyun.com/document_detail/31931.html?spm=5176.doc31867.6.632.hZFNSv
        (5) outputDir
            The section config the directory to place output file in. The section 
        can not be configed through interactive mode, but the section in config 
        file are still effective. 
            The default directory of outputDir is: ossutil_output in current 
        directory. ossutil will place all output files generated during running 
        in this directory. Output files include: report file(generated when error 
        occurs in cp command while batch upload/downlaod/copy files). 
            More information about report file, see help of cp command.
            Note: if outputDir is not exist, ossutil will create the directory 
        automatically, if outputDir you specified exists and is not a directory, 
        ossutil will return an error. 

        In interactive config, Bucket-Endpoint and Bucket-Cname is removed, but 
        the two sections in config file are still effective. 
        (6) Bucket-Endpoint
            Bucket-Endpoint specify endpoint for every individual bucket, the 
        section is prior to endpoint in base section.  
            In current version, Bucket-Endpoint interactive configuration is 
        removed, but the option in config file is still effective. Note, the 
        endpoint should be a second-level domain(SLD), eg: oss.aliyuncs.com. 
            When access a bucket, ossutil will search for endpoint corresponding 
        to the bucket in this section, if found, the endpoint is prior to the 
        endpoint in the base section. If --endpoint option is specified, --endpoint 
        option has the highest priority.
        (7) Bucket-Cname
            Bucket-Cname specify CNAME host for every individual bucket, the section 
        is prior to Bucket-Endpoint and endpoint in the base section.
            More information about CNAME host see: https://help.aliyun.com/document_detail/27112.html?spm=5176.product27099.4.6.Lf06oS#1. 
            In current version, Bucket-Cname interactive configuration is removed, 
        but the option in config file is still effective.
            When access a bucket, ossutil will search for endpoint corresponding 
        tothe bucket in this section, if found, the endpoint has priority over 
        the endpoint in Bucket-Endpoint and the endpoint in the base section. If 
        --endpoint option is specified, --endpoint option has the highest priority.

        PRI: --endpoint option > Bucket-Cname > Bucket-Endpoint > endpoint > default endpoint

    2) ossutil config options
        If any options except --language and --config-file is specified, the 
    command enter the non interactive mode. All the configurations should be 
    specified by options.


Credential File Format:

    [Credentials]
        language = EN 
        endpoint = oss.aliyuncs.com 
        accessKeyID = your_key_id
        accessKeySecret = your_key_secret
        stsToken = your_sts_token
        outputDir = your_output_dir
    [Bucket-Endpoint]
        bucket1 = endpoint1
        bucket2 = endpoint2
        ...
    [Bucket-Cname]
        bucket1 = cname1
        bucket2 = cname2
        ...

SAMPLE

    ossutil config
    ossutil config -e oss-cn-hangzhou.aliyuncs.com -c ~/.myconfig

OPTIONS

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Get crc64 or md5 of local file

SYNTAX

    ossutil hash file_url [--type=hashtype]

DETAIL DESCRIPTION

    The command calculate crc64 or md5/content-md5 value of the specified local file, 
    specify the hashtype by --type, default hashtype is crc64. 

    Warning: user can use stat command to check the crc64 or md5/content-md5 value of 
    normal oss object, see the X-Oss-Hash-Crc64ecma and Content-Md5 field. If the object 
    was uploaded to oss before oss support crc64 feature, stat result will not show 
    X-Oss-Hash-Crc64ecma, if the object is append file type or multipart, stat result 
    will not show Content-Md5. 

    Crc64 is calcuated according to ECMA-182(http://www.ecma-international.org/publications/standards/Ecma-182.htm).

    When hashtype is md5, it will output both md5 and content-md5 of local file. 
    Content-md5 is base64 encoded string of md5. For more detial about content-md5, 
    please refer to https://tools.ietf.org/html/rfc1864.

Usage:

    ossutil hash file_url [--type=hashtype]

SAMPLE

    1) Get crc64 of local file: 
        ossutil hash test.txt or
        ossutil hash test.txt --type=crc64
        
        output: 
        CRC64-ECMA                  : 295992936743767023        

    2) Get md5  of local file: 
        ossutil hash test.txt --type=md5
         
        output:
        MD5                         : 01C3C45C03B2AF225EFAD9F911A33D73
        Content-MD5                 : AcPEXAOyryJe+tn5EaM9cw==

OPTIONS

    --type=crc64
        hash type, Default: crc64, value range is: crc64/md5



SYNOPSIS

    Update ossutil

SYNTAX

    ossutil update [-f]

DETAIL DESCRIPTION

    The command check version of current ossutil and get the latest version, output the 
    versions, if any updated version exists, the command ask you for upgrading. If --force 
    option is specified, the command upgrade without asking.

SAMPLE

    ossutil update
    ossutil update -f

OPTIONS

    -f, --force
        operate silently without asking user to confirm the operation.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Make Bucket

SYNTAX

    ossutil mb oss://bucket [--acl acl] [--storage-class class] [-c file]

DETAIL DESCRIPTION

    The command create bucket under the specified credentials. You can specify bucket acl 
    information through --acl option meanwhile. But you can not specify the region for the 
    bucket, the region is decided by endpoint in config file. If the bucket existed under 
    the credentials, no error occurs, but if the bucket belongs to others, error occurs.

    More information about endpoint in config, see help config.

    More information about region, see Region section in https://help.aliyun.com/document_detail/31827.html?spm=5176.doc31826.6.138.rhUAjo.

ACL:

    ossutil supports following bucket acls, shorthand versions in brackets:
        public-read-write
        public-read
        private

    More information about acl, see help set-acl.

StorageClass:

    There are three kinds of StorageClass:
        Standard
        IA
        Archive

    More information about StorageClass see: https://help.aliyun.com/document_detail/31959.html?spm=5176.doc31957.6.839.E1ifnh

Usage:

    ossutil mb oss://bucket [--acl=acl] [--storage-class class] [-c file]
        If you create bucket without --acl option, ossutil will create bucket under the 
    specified credentials and the bucket acl is private, if you want to change acl, please 
    use set-acl command. 
        If you create bucket without --storage-class option, the storage class of bucket will
     be the default one: Standard. 
        If you create bucket with --acl option, ossutil will check the validity of acl, if 
    invalid, ossutil will enter interactive mode, prompt the valid acls and ask you for it. 
        If you create bucket with --storage-class option, ossutil will check the validity of 
    storage class.

SAMPLE

    1)ossutil mb oss://bucket1
    2)ossutil mb oss://bucket1 --acl=public-read-write
    3)ossutil mb oss://bucket1 --storage-class IA 
    4)ossutil mb oss://bucket1 --acl=public-read-write --storage-class IA

OPTIONS

    --acl
        acl information.

    --storage-class=Standard
        set the storage class of bucket(default: Standard), value range is: Standard/IA/Archive.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    List Buckets or Objects

SYNTAX

    ossutil ls [oss://bucket[/prefix]] [-s] [-d] [--limited-num num] [--marker marker] [--upload-id-marker umarker] [-c file]

DETAIL DESCRIPTION

    The command list buckets of the specified credentials. or objects of the specified 
    endpoint and credentials, with simple additional information, about each matching 
    provider, bucket, subdirectory, or object. If --short-format option is specified, 
    ossutil will show by short format. 

--encoding-type option

    If the --encoding-type option is setted to url, the object/prefix inputted is url 
    encoded, if the --marker option or --upload-id-marker option is specified, ossutil 
    will consider the marker or upload-id-marker inputted is also url encoded.

    Note: If the option is specified, the cloud_url like: oss://bucket/object should be 
    inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not 
    be url encoded. 


Usage:

    There are two usages:

    1) ossutil ls [oss://] [-s] [--limited-num num] [--marker marker]
        If you list without a cloud_url, ossutil lists all the buckets using the credentials
    in config file with last modified time and location in addition. --show_format option 
    will ignore last modified time and location. The usage do not support --directory 
    option.

    2) ossutil ls oss://bucket[/prefix] [-s] [-d] [-m] [-a] [--limited-num num] [--marker marker] [--upload-id-marker umarker]
        If you list without --multipart and --all-type option, ossutil will list objects 
    in the specified bucket(with the prefix if you specified), with object size, last 
    modified time and etag in addition, --short-format option ignores all the additional 
    information. --directory option returns top-level subdirectory names instead of contents 
    of the subdirectory, which in default show by short format. the directory is end with /. 
        --multipart option will show multipart upload tasks under the cloud_url(oss://bucket[/prefix]), 
    which means, ossutil will show the uploadId of those uncompleted multipart, whose object 
    name starts with the specified prefix. ossutil will show the init time of uploadId meanwhile. 
    The usage also supports --short-format and --directory option. (Multipart upload is also used 
    in resume cp. More information about multipart see: https://help.aliyun.com/document_detail/31991.html?spm=5176.doc31992.6.880.VOSDk5). 
        --all-type option will show objects and multipart upload tasks under the cloud_url(oss://bucket[/prefix]),  
    which means, ossutil will both show the objects with the specified prefix and the uploadId of 
    those uncompleted multipart, whose object name starts with the specified prefix. The usage also 
    support --short-format and --directory option.
        If user specified --limited-num option, the total num will not exceed the num. If user list 
    objects and Multipart Uploads meanwhile, the total num of objects and Multipart Uploads will not 
    exceed the num. 
        --upload-id-marker option is not effective when list objects. When list Multipart Uploads, 
    --marker option and --upload-id-marker option decide the initial position of listing meanwhile,
    for more initial, see: https://help.aliyun.com/document_detail/31997.html?spm=5176.doc31965.6.887.MK6GVw.

SAMPLE

    1) ossutil ls -s
        oss://bucket1
        oss://bucket2
        oss://bucket3
        Bucket Number is: 3

    2) ossutil ls oss:// -s
        oss://bucket1
        oss://bucket2
        oss://bucket3
        Bucket Number is: 3

    3) ossutil ls oss://bucket1 -s
        oss://bucket1/dir1/obj11
        oss://bucket1/obj1
        oss://bucket1/sample.txt
        Object Number is: 3

    4) ossutil ls oss://bucket1
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:06:29 +0000 CST  201933      Standard   7E2F4A7F1AC9D2F0996E8332D5EA5B41  oss://bucket1/dir1/obj11
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        2016-04-08 14:50:47 +0000 CST 6476984      Standard   4F16FDAE7AC404CEC8B727FCC67779D6  oss://bucket1/sample.txt
        Object Number is: 3

    5) ossutil ls oss://bucket1 -d
        oss://bucket1/obj1
        oss://bucket1/dir1
        oss://bucket1/sample.txt
        Object and Directory Number is: 3

    6) ossutil ls oss://bucket1 -m 
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        2017-01-20 11:16:21 +0800 CST  A20157A7B2FEC4670626DAE0F4C0073C  oss://bucket1/tobj
        UploadID Number is: 3
    
    7) ossutil ls oss://bucket1/obj -m 
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 2
 
    8) ossutil ls oss://bucket1 -a 
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:06:29 +0000 CST  201933      Standard   7E2F4A7F1AC9D2F0996E8332D5EA5B41  oss://bucket1/dir1/obj11
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        2016-04-08 14:50:47 +0000 CST 6476984      Standard   4F16FDAE7AC404CEC8B727FCC67779D6  oss://bucket1/sample.txt
        Object Number is: 3
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:43:13 +0000 CST  2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        2017-01-20 11:16:21 +0800 CST  A20157A7B2FEC4670626DAE0F4C0073C  oss://bucket1/tobj
        UploadID Number is: 4
         
    9) ossutil ls oss://bucket1/obj -a 
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        Object Number is: 1
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:43:13 +0000 CST  2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 3

    10) ossutil ls oss://bucket1/obj -a -s 
        oss://bucket1/obj1
        Object Number is: 1
        UploadID                          ObjectName
        15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 3

    11) ossutil ls oss://bucket1/obj -a -s --marker=obj1 
        Object Number is: 0
        UploadID                          ObjectName
        3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 1

    12) ossutil ls oss://bucket1/obj -a -s --limited-num=2 
        oss://bucket1/obj1
        Object Number is: 1
        UploadID                          ObjectName
        15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        UploadID Number is: 1

    13) ossutil ls oss://bucket1/%e4%b8%ad%e6%96%87 --encoding-type url
        LastModifiedTime                   Size(B)  StorageClass   ETAG                                  ObjectName
        2017-03-17 17:34:40 +0800 CST      8345742      Standard   BBCC8C0954B869B4A6B34D9404C5BCFD      oss://bucket1/中文
        Object Number is: 1
        0.066567(s) elapsed

OPTIONS

    -s, --short-format
        Show by short format, if the option is not specified, show long format by default.

    -d, --directory
        Return matching subdirectory names instead of contents of the subdirectory.

    -m, --multipart
        Indicate that the subject of the command are uncompleted Multipart Uploads, instead of objects(which is the subject in default situation.

    -a, --all-type
        Indicate that the subject of the command contains both objects and uncompleted Multipart Uploads.

    --limited-num=-1
        the limited number of return results.

    --marker
        the marker of bucket when list buckets, or the marker of key when list object or Multipart Uploads.

    --upload-id-marker
        the marker of object when list object or Multipart Uploads.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Remove Bucket or Objects

SYNTAX

    ossutil rm oss://bucket[/prefix] [-r] [-b] [-f] [-c file]

DETAIL DESCRIPTION

    The command remove bucket or objects, in some case remove both. Please use the 
    command carefully!! 
    Make sure the objects can be removed before useing the command to remove objects! 
    Make sure the bucket and objects inside can be removed before useing the command 
    to remove bucket!

        (1) Remove single object, see usage 1)
        (2) Remove bucket, don't remove objects inside, see usage 2)
        (3) Batch remove many objects, reserve bucket, see usage 3)
        (4) Remove bucket and objects inside, see usage 4)

        When remove bucket, the --bucket option must be specified.
        If --force option is specified, remove silently without asking user to confirm the 
        operation.  

        Result: if no error displayed before show elasped time, then the target is removed 
        successfully.

    By default, when remove object, ossutil will reserve the uncompleted multipart upload 
    tasks whose object name match the specified cloud_url, if you want to remove those multipart 
    upload tasks, please specify --multipart option. Note: ossutil will remove all the multipart 
    upload tasks of the specified cloud_url, remove a special single multipart upload task 
    is unsupported. 

    If you need to remove object and the multipart upload tasks whose object name match the 
    specified cloud_url meanwhile, please use --all-type option.

    Note: remove the multipart upload tasks uncompleted will cause upload the part fail next 
    time. Because cp command use multipart upload to realize resume upload/download/copy, so 
    remove the multipart upload tasks uncompleted may cause resume upload/download/copy fail 
    the next time(Error: NoSuchUpload). If you want to reupload/download/copy the entire file 
    again, please remove the checkpoint file in checkpoint directory. 

Usage:

    There are four usages:

    1) ossutil rm oss://bucket/object
        (Remove single object)
        If you remove without --recursive and --bucket option, ossutil remove the single 
    object specified in cloud_url. In the usage, please make sure cloud_url exactly specified 
    the object you want to remove, ossutil will not treat object as prefix and remove prefix 
    matching objects. No matter --force is specified or not, ossutil will not show prompt 
    question.
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    of the specified object.
        If --all-type option is specified, ossutil will remove the specified object along 
    with the multipart upload tasks of the specified object. 

    2) ossutil rm oss://bucket -b [-f]
        (Remove bucket, don't remove objects inside)
        If you remove with --bucket option, without --recursive option, ossutil try to 
    remove the bucket, if the bucket is not empty, error occurs. In the usage, please make 
    sure cloud_url exactly specified the bucket you want to remove, or error occurs. If --force 
    option is specified, ossutil will not show prompt question. 

    3) ossutil rm oss://bucket[/prefix] -r [-m] [-a] [-f]
        (Remove objects, reserve bucket)
        If you remove with --recursive option, without --bucket option, ossutil remove all 
    the objects that prefix-matching the cloud_url you specified(empty prefix means all 
    objects in the bucket), bucket will be reserved because of missing --bucket option.
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    whose object name start with the specified prefix.
        If --all-type option is specified, ossutil will remove the objects with the specified 
    prefix along with the multipart upload tasks whose object name start with the specified 
    prefix. 

    4) ossutil rm oss://bucket[/prefix] -r -b [-a] [-f] 
        (Remove bucket and objects inside)
        If you remove with both --recursive and --bucket option, after ossutil removed all 
    the prefix-matching objects, ossutil will try to remove the bucket together. If user want 
    to remove bucket and objects inside, the usage is recommended. If --force option is 
    specified, ossutil will not show prompt question. 
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    whose object name start with the specified prefix.
        If --all-type option is specified, ossutil will remove the objects with the specified 
    prefix along with the multipart upload tasks whose object name start with the specified 
    prefix. 


	Invalid Usage: 
    1) ossutil rm oss://bucket/object -m -b [-f]
		It's invalid to remove the bucket right after remove uncompleted upload tasks of single 
    object.
    2) ossutil rm oss://bucket/object -a -b [-f]
        It's invalid to remove the bucket right after remove the object and uncompleted upload 
    tasks of the single object you specified.

SAMPLE

    ossutil rm oss://bucket1/obj1
    ossutil rm oss://bucket1/obj1 -m
    ossutil rm oss://bucket1/obj1 -a
    ossutil rm oss://bucket1/objdir -r 
    ossutil rm oss://bucket1/multidir -m -r 
    ossutil rm oss://bucket1/dir -a -r 
    ossutil rm oss://bucket1 -b
    ossutil rm oss://bucket2 -r -b -f
    ossutil rm oss://bucket2 -a -r -b -f
    ossutil rm oss://bucket2/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -b, --bucket
        the option used to make sure the operation will operate on bucket

    -f, --force
        operate silently without asking user to confirm the operation.

    -m, --multipart
        Indicate that the subject of the command are uncompleted Multipart Uploads, instead of objects(which is the subject in default situation.

    -a, --all-type
        Indicate that the subject of the command contains both objects and uncompleted Multipart Uploads.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Display meta information of bucket or objects

SYNTAX

    ossutil stat oss://bucket[/object] [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command display the meta information of bucket or objects. The object meta information 
    setted through set-meta command, can be check by the command.

Usage：

    There are three usages:    

    1) ossutil stat oss://bucket [--encoding-type url]
        ossutil display bucket meta info, include creation date, location, extranet endpoint, 
    intranet endpoint, Owner and acl info.

    2) ossutil stat oss://bucket/object [--encoding-type url]
        ossutil display object meta info, include file size, last modify time, etag, content-type, 
    user meta etc.

SAMPLE

    ossutil stat oss://bucket1
    ossutil stat oss://bucket1/object  
    ossutil stat oss://bucket1/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Set acl on bucket or objects

SYNTAX

    ossutil set-acl oss://bucket[/prefix] [acl] [-r] [-b] [-f] [-c file]

DETAIL DESCRIPTION

    The command set acl on the specified bucket or objects. If you use the command 
    witout acl information, ossutil will ask user for it.

    (1) set acl on bucket, see usage 1)
    (2) set acl on single object, see usage 2)
    (3) batch set acl on many objects, see usage 3)

    When set acl on bucket, the --bucket option must be specified. 
    Set acl on bucket an objects inside simultaneously is not supported, please 
    operate independently.

    Result: if no error displayed before show elasped time, then the setting is completed successfully.
    User can use stat command to check the acl information of bucket or objects.

ACL:

    ossutil supports following bucket acls, shorthand versions in brackets:
        public-read-write
        public-read
        private

    ossutil support following objet acls:
        public-read-write
        public-read
        private
        default

    More information about acl see ACL Control in https://help.aliyun.com/document_detail/31867.html?spm=5176.doc31960.6.147.8dVwsh.

Usage：

    There are three usages:    

    1) ossutil set-acl oss://bucket [acl] -b [-c file]
        If --bucket option is specified, ossutil will try to set acl on bucket. In the 
    usage, please make sure cloud_url exactly specified the bucket you want to set acl 
    on, and --recursive option is not supported here. No matter --force option is specified 
    or not, ossutil will not show prompt question. If acl information is missed, ossutil 
    will enter interactive mode and ask you for it. 

    2) ossutil set-acl oss://bucket/object [acl] [-c file]
        The usage set acl on single object, if object not exist, error occurs. In the 
    usage, please make sure cloud_url exactly specified the object you want to set acl 
    on, and --recursive option is not specified(or ossutil will search for prefix-matching 
    objects and set acl on those objects). No matter --force option is specified or not, 
    ossutil will not show prompt question. If acl information is missed, ossutil will 
    enter interactive mode and ask you for it. 

    3) ossutil set-acl oss://bucket[/prefix] [acl] -r [-f] [-c file]
        The usage can set acl on many objects, --recursive option is required for the 
    usage, ossutil will search for prefix-matching objects and set acl on those objects. 
    If an error occurs, ossutil will record the error message to report file, and ossutil 
    will continue to attempt to set acl on the remaining objects(more information see 
    help of cp command). In the usage, --bucket option is not supported, which means set 
    acl on bucket an objects inside simultaneously is not supported. If --force option 
    is specified, ossutil will not show prompt question. If acl information is missed, 
    ossutil will enter interactive mode and ask you for it. 
        If --include/--exclude option is specified, ossutil will search for pattern-matching 
    objects and set meta on those objects.
        --include and --exclude option, please refer cp command help.

SAMPLE

    (1)ossutil set-acl oss://bucket1 public-read-write -b 

    (2)ossutil set-acl oss://bucket1/obj1 private 

    (3)ossutil set-acl oss://bucket1/obj default -r
       ossutil set-acl oss://bucket1/obj default -r --include "*.jpg"
       ossutil set-acl oss://bucket1/obj default -r --exclude "*.jpg"

    (4)ossutil set-acl oss://bucket1/%e4%b8%ad%e6%96%87 default --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -b, --bucket
        the option used to make sure the operation will operate on bucket

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    set metadata on already uploaded objects

SYNTAX

    ossutil set-meta oss://bucket[/prefix] [header:value#header:value...] [--update] [--delete] [-r] [-f] [-c file]

DETAIL DESCRIPTION

    The command can be used to set, update or delete the specified objects' meta data. 
    If --recursive option is specified, ossutil find all matching objects and batch set 
    meta on these objects, else, ossutil set meta on single object, if the object not 
    exist, error happens. 

    (1) Set full meta: If --update option and --delete option is not specified, ossutil 
        will set the meta of the specified objects to [header:value#header:value...], what
        user inputs. If [header:value#header:value...] is missing, it means clear the meta 
        data of the specified objects(to those headers which can not be deleted, that is, 
        the headers do not start with: X-Oss-Meta-, the value will not be changed), at the 
        time ossutil will ask user to confirm the input.

    (2) Update meta: If --update option is specified, ossutil will update the specified 
        headers of objects to the values that user inputs(the values can be empty), other 
        meta data of the specified objects will not be changed. --delete option is not 
        supported in the usage. 

    (3) Delete meta: If --delete option is specified, ossutil will delete the specified 
        headers of objects that user inputs(to those headers which can not be deleted, 
        that is, the headers do not start with: X-Oss-Meta-, the value will not be changed), 
        in this usage the value must be empty(like header: or header), other meta data 
        of the specified objects will not be changed. --update option is not supported 
        in the usage.

    The meta data of bucket can not be setted by the command, please use other commands. 
    User can use stat command to check the meta information of bucket or objects.

Headers:

    ossutil supports following headers:
        Content-Type
        Content-Disposition
        Expires(time.RFC3339: 2006-01-02T15:04:05Z07:00)
        Accept-Encoding
        X-Oss-Server-Side-Encryption
        X-Oss-Object-Acl
        Cache-Control
        Content-Encoding
        Origin
        and headers starts with: X-Oss-Meta-

    Warning: headers are case-insensitive, but value are case-sensitive.

Usage:

    There are two usages:

    1) ossutil set-meta oss://bucket/object [header:value#header:value...] [--update] [--delete] [-f] 
        If --recursive option is not specified, ossutil set meta on the specified single 
    object. In the usage, please make sure cloud_url exactly specified the object you want to 
    set meta on, if object not exist, error occurs. If --force option is specified, ossutil 
    will not show prompt question. 
        The usage of --update option and --delete option is showed in detailHelpText. 

    2) ossutil set-meta oss://bucket[/prefix] [header:value#header:value...] -r [--update] [--delete] [-f]
        If --recursive option is specified, ossutil will search for prefix-matching objects 
    and set meta on these objects. If an error occurs, ossutil will record the error message 
    to report file, and ossutil will continue to attempt to set acl on the remaining objects(
    more information see help of cp command). 
        If --include/--exclude option is specified, ossutil will search for pattern-matching objects and 
    set meta on those objects. 
	    --include and --exclude option, please refer cp command help.
        If --force option is specified, ossutil will not show prompt question.
        The usage of --update option and --delete option is showed in detailHelpText.

SAMPLE

    (1)ossutil set-meta oss://bucket1/obj1 Cache-Control:no-cache#Content-Encoding:gzip#X-Oss-Meta-a:b
        Set Cache-Control, Content-Encoding and X-Oss-Meta-a header for obj1

    (2)ossutil set-meta oss://bucket1/o X-Oss-Meta-empty:#Content-Type:plain/text -u -r
        Batch update X-Oss-Meta-empty and Content-Type header on objects that start with o

    (3)ossutil set-meta oss://bucket1/ X-Oss-Meta-empty:#Content-Type:plain/text --update -r --include "*.jpg"
        Batch update X-Oss-Meta-empty and Content-Type header on objects ending with .jpg

    (4)ossutil set-meta oss://bucket1/o X-Oss-Meta-empty:#Content-Type:plain/text --update -r --exclude ".jpg"
        Batch update X-Oss-Meta-empty and Content-Type header on objects starting with o and ending with .jpg

    (5)ossutil set-meta oss://bucket1/obj1 X-Oss-Meta-delete -d
        Delete X-Oss-Meta-delete header of obj1 

    (6)ossutil set-meta oss://bucket/o -r
        Batch set the meta of objects that start with o to empty

    (7)ossutil set-meta oss://bucket1/%e4%b8%ad%e6%96%87 X-Oss-Meta-delete --delete --encoding-type url
        Delete X-Oss-Meta-delete header of oss://bucket1/中文

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -u, --update
        update

    --delete
        delete

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    Upload, Download or Copy Objects

SYNTAX

    ossutil cp file_url cloud_url  [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir] [--snapshot-path=sdir]
    ossutil cp cloud_url file_url  [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir] [--range=x-y] 
    ossutil cp cloud_url cloud_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir]

DETAIL DESCRIPTION

    The command allows: 
    1. Upload file from local file system to oss 
    2. Download object from oss to local file system
    3. Copy objects between oss
    Which matches with the following three kinds of operations:
        ossutil cp file_url oss://bucket[/prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--snapshot-path=sdir]
        ossutil cp oss://bucket[/prefix] file_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--range=x-y]
        ossutil cp oss://src_bucket[/src_prefix] oss://dest_bucket[/dest_prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] 

    file_url means the file in local file system, it supports relative path and absolute 
    path, the usage of file_url is same with your local file system. oss://bucket[/prefix] 
    means object in oss, it supports prefix matching, but not support wildcard.

    ossutil sperate file of local system and oss objects by the prefix of oss://, which means 
    if the url starts with oss://, ossutil considers it as object, else, ossutil considers it 
    as file in local system. 

    Note: when copy between oss, ossutil only support copy objects, the uncompleted Multipart 
    Uploads are not supported.


--recursive option:

    (1) Upload file to oss: if file_url is directory, the --recursive option must be specified. 

    (2) When download objects or copy objects between oss:
        If --recursive option is not specified, ossutil download or copy the specified single 
    object, in the usage, please make sure url exactly specified the object you want to set meta 
    on, if object not exist, error occurs. 
        If --recursive option is specified, ossutil will search for prefix-matching objects and 
    download or copy these objects. If error occurs, objects which has been download or copyed 
    will not rollback. 

    By default, if an error occurs to a file in batch upload(/download/copy) files operation, 
    ossutil will continue to attempt to copy the remaining files, and ossutil will record the 
    error message to report file. The files succeed copied will not be recorded to report file.   

    Note: Ossutil will print error information and exit, instead of continue to run if an error 
    occurs in batch upload(/download/copy) files operation in several situations:
    (1) If the error occurs before of entering the upload(/download/copy) iteration, ossutil will 
        print error message and return, and the report file will not be generated. eg. user enter 
        an invalid cp command.
    (2) If the error occurs during upload(/download/copy) iteration is: NoSuchBucket, AccessDenied 
        caused by unauthorized authentication and other errors. ossutil will print error message 
        and return, the report file that has been generated will not be deleted.

    Report file name is: ossutil_report_Date_Time.report. Report file is one kind 
    of output files, and will be putted in output directory, the directory can be specified by 
    --output-dir option or outputDir option in config file. If it's not specified, ossutil will use 
    the default directory: ossutil_output in current directory.

    Note: ossutil will not mainten the report file, please check and clear your output directory 
    regularlly to avoid too many report files in your output directory. 

--include and --exclude option:

    When --recursive is specified, these parameters perform pattern matching to either exclude or
    include a particular file or object. By default, all files/objects are included.

    The following pattern symbols are supported.
    *: Matches everything
    ?: Matches any single character
    [sequence]: Matches any character in sequence
    [!sequence]: Matches any character not in sequence
    Note: does not support patterns containing directory info. e.g., --include "/usr/*/test/*.jpg" 

    Any number of these parameters can be passed to a command. You can do this by providing an --exclude
    or --include argument multiple times, e.g.,
      --include "*.txt" --include "*.png". 
    When there are multi filters, the rule is the filters that appear later in the command take precedence
    over filters that appear earlier in the command. e.g.,

    --exclude "*" --include "*.txt"
    All files will be excluded from the command except for files ending with .txt

    --include "*.txt" --exclude "*"
    All files will be excluded from the command.

    e.g., 3 files in current dir
    testfile1.jpg
    testfiel2.txt
    testfile33.jpg

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg'
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg' --include 'testfile*.jpg'
    upload testfile1.jpg to oss://my-bucket/path/testfile1.jpg
    upload testfile33.jpg to oss://my-bucket/path/testfile33.jpg
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg' --include 'testfile*.jpg' --exclude 'testfile?.jpg'
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt
    upload testfile33.jpg to oss://my-bucket/path/testfile33.jpg

--meta option

    This option will set the specified objects' meta data. If --recursive option is specified, 
    ossutil will set meta for all uploaded objects.  

    ossutil supports following headers:
        X-Oss-Server-Side-Encryption
        X-Oss-Object-Acl
        Content-Type
        Content-Disposition
        Expires(time.RFC3339: 2006-01-02T15:04:05Z07:00)
        Accept-Encoding
        Cache-Control
        Content-Encoding
        Origin
        and headers starts with: X-Oss-Meta-

    Note: headers are case-insensitive, but value are case-sensitive. After setting, origin meta will be
    replaced with specified meta. HTTP HEADER will be reserved if no speified value. User meta will be
    deleted if no specified value.

--acl option

    This option will set acl on the specified objects. If --recursive option is specified, 
    ossutil will set acl for all uploaded objects.  

    ossutil support following objet acls:
        public-read-write
        public-read
        private
        default

    More information about acl see ACL Control in https://help.aliyun.com/document_detail/31867.html?spm=5176.doc31960.6.147.8dVwsh.

--output-dir option
    
    The option specify the directory to deposit output file generated by ossutil, the default value 
    is: ossutil_output in current directory. If the directory specified not exist, ossutil will 
    create the directory automatically, if it exists but is not a directory, ossutil will return an 
    error.  

    Output file contains: report file which used to record error message generated by cp command, 
    set-acl, set-meta, restore command.


Incremental Upload/Download/Copy:

--update option(-u)

    Use the --update option to copy only when the source file is newer than the destination file 
    when the destination file is missing. If --update option is specified, when the destionation 
    file is existed, ossutil will not prompt and copy when newer, no matter if --force option is 
    specified or not.
    The option can be used when batch copy failed, skip the succeed files in retry.

--snapshot-path option

    This option is used to accelerate the incremental upload of batch files in certain scenarios(
    currently, download and copy do not support this option). The scenarios is: lots of files and 
    no other user updated the corresponding object in oss during the two uploads.
    
    If you use the option when batch copy files, ossutil will generate files to record the snapshot 
    information in the specified directory. When the next time you upload files with the option, 
    ossutil will read the snapshot information under the specified directory for incremental upload. 
    The snapshot-path you specified must be a local file system directory can be written in, if the 
    directory does not exist, ossutil creates the files for recording snapshot information, else 
    ossutil will read snapshot information from the directory for incremental upload(ossutil will 
    only upload the files which has not been successfully upload to oss and the files has been locally 
    modified), and update the snapshot information to the directory. 
    
    Note: 
    (1) The option record the lastModifiedTime of local files which has been successfully upload in 
        local file system, and compare the lastModifiedTime of local files in the next cp to decided 
        whether to skip the upload of the files, so if you use the option to achieve incremental upload, 
        please make sure no other user updated the corresponding object in oss during the two uploads. 
        If you can not guarantee the scenarios, please use --update option to achieve incremental upload. 
    (2) Ossutil does not automatically delete snapshot-path snapshot information, in order to avoid too 
        much snapshot information, when the snapshot information is useless, please clean up your own 
        snapshot-path on your own.
    (3) Due to the extra cost of reading and writing snapshot information, if the file num is not very big, 
        or the network condition is good, or there may be some other users to modify the corresponding 
        object in oss during the two uploads, it's not suggested to use the option. you can use --update 
        option for incremental upload. 

Note: --update option and --snapshot-path can be used together, ossutil priority will be based on snapshot 
    information to determine whether to skip upload, if not satisfied, ossutil will then based on --update 
    to determine whether to skip upload. If any of those two policies is specified, ossutil will ingnore 
    --force option, which means whether or not the destionation file exists, ossutil will not ask user 
    whether to replace the file, and determine whether to upload according to incremental upload policies.

    Incremental download will not consider the value of --range option, and only consider whether file 
    exists and lastModifiedTime. Which means even if the range changs between two download, ossutil will 
    skip the files which satisfy the incremental download condition, so, please avoid to use both!


Other Options:

--force option

    If the file dest_url specified is existed, and --update and --snapshot-path option is not specified, 
    ossutil will ask if replace the file(if the input is invalid, the file will not be replaced). If 
    --force option is specified here, ossutil will not prompt, replace by force. The option is useful 
    only when --update and --snapshot-path option is not specified. 

--range option
    
    If user need to range download a file, we can use --range option, if we use the option, then 
    resume copy of big file and multi-thread copy is ineffective.
    
    The offset of file is start 
    with 0, there are three forms: 0-9 or 3- or -9.
        eg: --range=0-9, means download the first to the tenth character of the file.
        --range=3-, means download the fourth character to the end of the file.
        --range=-9, means download the last nine character of the file.
    If the range exceed the file actual scope, will download the whole file.
    More information about range see: https://help.aliyun.com/document_detail/31980.html?spm=5176.doc31994.6.860.YH7LL1

    If you need to download the whole file, please do not specify the option.
    The option is not supported for upload and copy files. 

    Note: Incremental download(-u option) will not conside --range option. Which means even if the 
    range changs between two download, ossutil will skip the files which satisfy the incremental 
    download condition, so, please avoid to use both!

--encoding-type option
    
    If the --encoding-type option is setted to url, it means the object name and file name are url 
    endcoded.


Resume copy of big file:

    If the size of source file is bigger than what --bigfile-threshold option specified(default: 
    100M), ossutil will consider the file as a big file, and use resume copy policy to these files:
    (1) Upload file to oss: ossutil will split the big file to many parts, use multipart upload. If 
        upload is failed, ossutil will record failure information in .ossutil_checkpoint directory 
        in local file system. When retry, ossutil will read the checkpoint information and resume 
        upload, if the upload is succeed, ossutil will remove the .ossutil_checkpoint directory. 
    (2) Download object from oss: ossutil will split the big file to many parts, range get each part. 
        If download is failed, ossutil wll record failure information in .ossutil_checkpoint directory 
        in local file system. If success, ossutil will remove the directory.
    (3) Copy between oss: ossutil will split the big file to many parts, use Upload Part Copy, and 
        record failure information in .ossutil_checkpoint directory in local file system. If success, 
        ossutil will remove the directory.

    Warning:
    1) Resume copy will not be implemented on small file, if failure happens, ossutil will copy the 
        whole file the next time.
    2) In operation (1) and (3), if failure happens, uploadId that has not been completed may appear in 
        oss. If the operation success after retry, these uploadId will be completed automatically. 
    3) When upload file to oss, if .ossutil_checkpoint directory is included in file_url, .ossutil_checkpoint 
        will not be uploaded to oss. The path of checkpoint directory can be specified by --checkpoint-dir 
        option, please make sure the directory you specified can be removed.
    4) If you remove the uncompleted multipart upload tasks by rm command, may cause resume upload/download/copy 
        fail the next time(Error: NoSuchUpload). If you want to reupload/download/copy the entire file again, 
        please remove the checkpoint file in checkpoint directory.


Performance Tuning:

--jobs option or --parallel option (Concurrency Control)

    --jobs option controls the amount of concurrency tasks between multi-files, --parallel option controls 
    the amount of concurrency tasks when work with a file. In default situation, ossutil will calculate the 
    parallel num according to file size(the option is useless to small file, the file size to use multipart 
    upload can be specified by --bigfile-threshold option). When batch upload/download/copy files, the total 
    concurrency tasks num is jobs num multiply by parallel num. The two option can be specified by user, if 
    the performance of default setting is poor, user can adjust the two options. 

    Note:
    1) If the parallels and jobs number are too big, because of the switching between threads, the performance 
    of upload/download/copy may decline, so please set the options according to your machine condition. If need 
    performance tuning, user can set the two options to two small numbers at first and increase them step by step. 
    2) If the parallels and jobs number are too big, in the case of limited machine resources, error "EOF" may 
    occur due to the network transfer too slow, in this situation, please reduce the --jobs and --parallel num. 

--part-size option

    The option specify the part size of resume upload/download/copy of big file. In default situation, ossutil 
    will calculate the part size and parallel according to file size. When performance tuning or some other needs, 
    user can set the option.     

    If the option is specified, part num is: ceil(file size/part size). Note that if --parallel value is bigger 
    than part num, the extra parallel is feeble, the actual parallel will be part num.

    If the part size is too small, it may influence ossutil file upload/download/copy performance, if the part 
    size is too big, it may influence the actual parallel num, so, please if specify the option, please set it 
    to a reasonable value. 


Batch file migration:

    ossutil support batch file migration by transfer files through local file system, the usual usage is: 
    (1) Batch file upload:
        ossutil cp your_dir oss://your_bucket -r -f -u
    (2) Batch file download:
        ossutil cp oss://your_bucket your_dir -r -f -u
    (3) File copy between buckets in the same region：
        ossutil cp oss://your_src_bucket oss://your_dest_bucket -r -f -u

    The meaning of every option, see help above.
    After each migration, please check your report file.

    When batch file upload, if the file num is big and no other user modified the corresponding object in 
    oss during the two uploads, you can use --snapshot-path to accelerate the incremental upload, see more 
    information in help text of --snapshot-path option above. 
    The command is: 
        ossutil cp your_dir oss://your_bucket -r -f -u --shapshot-path=your-path


Usage:

    There are three usages:

    1) ossutil cp file_url oss://bucket[/prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--snapshot-path=sdir]
        The usage upload file in local system to oss. file_url can be file or directory. If file_url 
    is file, no matter --recursive option is specified or not will not affect the result. If file_url 
    is directory, even if the directory is empty or only contains one file, we must specify --recursive 
    option. Mind that, ossutil will upload all sub files and directories(include empty directory) inside 
    file_url to oss, but differe from shell cp, the first level directory specified by file_url will not 
    be upload to oss. 
    Object Naming Rules:
        If file_url is file: if prefix is empty or end with "/", object name is: dest_url + file name.
                             else, object name is: dest_url.
        If file_url is directory: if prefix is empty or end with "/", object name is: dest_url + file path relative to file_url.
        
    2) ossutil cp oss://bucket[/prefix] file_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--range=x-y] 
        The usage download one or many objects to local system. If --recursive option is not specified, 
    ossutil considers src_url exactly specified the single object you want to download, prefix-matching 
    is not supported now, if the object not exists, error occurs. If --recursive option is specified, 
    ossutil will search for prefix-matching objects and batch download those objects, at this time file_url 
    must be directory, if the directory not exists, ossutil will create the directory automatically.
    File Naming Rules:
        If file_url is file, ossutil download file to the path of file_url, and the file name is got from file_url.
        If file_url is directory, ossutil download file to the directory, and the file name is: object name.
    Warning: If the object name is end with / and size is zero, ossutil will create a directory in local 
    system, instead of creating a file.

    3) ossutil cp oss://src_bucket[/src_prefix] oss://dest_bucket[/dest_prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] 
        The usage copy objects between oss. The src_bucket can be same with dest_bucket. Pay attention 
    please, if src_url is the same with dest_url, ossutil will do nothing but exit after prompt. Set meta 
    please use "set-meta" command. If --recursive option is not specified, ossutil considers src_url exactly 
    specified the single object you want to copy. If --recursive option is specified, ossutil will search 
    for prefix-matching objects and batch copy those objects. 

    Warning: when batch copy, it's not allowed that src_url is the prefix of dest_url, because recursivlly 
    copy will happen under the situation. dest_ur is the prefix of src_url is not allowed too, because of 
    covering source file. But they are allowed in single file copy.

    Object Naming Rules:
        If src_url is one object: if prefix of dest_object is empty or end with "/", object name is: dest_url + object name exclude parenet directory path. 
                                  else, object name is: dest_url.
        If src_url means multiple objects: object name is: dest_url+ source object name exclude src_prefix.

SAMPLE

    1) Upload to oss
    Suppose there are directory local_dir in local system, 
        local_dir contains file a, b directory c, d, 
        c is empty, d contains file dd.
    
    ossutil cp local_dir/a oss://bucket1
    Generate:
        oss://bucket1/a

    ossutil cp local_dir/a oss://bucket1/b
    Generate:
        oss://bucket1/b

    ossutil cp local_dir/a oss://bucket1/b/
    Generate:
        oss://bucket1/b/a

    ossutil cp local_dir oss://bucket1/b/
    Error

    ossutil cp local_dir oss://bucket1/b -r
    Generate:
        oss://bucket1/b/a
        oss://bucket1/b/b
        oss://bucket1/b/c/
        oss://bucket1/b/d/
        oss://bucket1/b/d/dd

    ossutil cp local_dir oss://bucket1/b -r
    If an 5xx error occurs while upload a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to upload the remaining files.

    ossutil cp local_dir oss://bucket1/b -r --output-dir=your_dir 
    If an 5xx error occurs while upload a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and continue to upload the remaining files.

    ossutil cp local_dir oss://bucket1/b -r -u
    Use --update policy for incremental upload

    ossutil cp local_dir oss://bucket1/b -r --snapshot-path=your_local_path
    Use --snapshot-path policy for incremental upload

    ossutil cp local_dir oss://bucket1/b -r -u --snapshot-path=your_local_path
    Use --snapshot-path and --update policies for incremental upload

    ossutil cp %e4%b8%ad%e6%96%87 oss://bucket1/%e6%b5%8b%e8%af%95 --encoding-type url
    Upload the file "中文" to oss://bucket1/测试

    2) download from oss
    Suppose there are following objects in oss:
        oss://bucket/abcdir1/a
        oss://bucket/abcdir1/b
        oss://bucket/abcdir1/c
        oss://bucket/abcdir2/a/
        oss://bucket/abcdir2/b/e
    And size of oss://bucket/abcdir2/a/ is zero. 

    ossutil cp oss://bucket/abcdir1/a b
    Generate file b

    ossutil cp oss://bucket/abcdir1/a b/
    Generate file a under directory b

    ossutil cp oss://bucket/abcdir1/a b/ --range=30-90
    Generate file a under directory b, the content is the thirty-first character to the ninety-first character of object abcdir1/a.

    ossutil cp oss://bucket/abcdir2/a/ b
    If b exists and is a file, error occurs.
    If b exists and is a directory, generate directory a under directory b.

    ossutil cp oss://bucket/abc b
    Error: object not exist

    ossutil cp oss://bucket/abc b -r
    If b exists and is a file, error occurs.
    Else generate directory dir1, dir2,
        generate file a, b, c in dir1,
        generate directory a, b in dir2, generate file e in directory b.
        
    ossutil cp oss://bucket/ local_dir -r
    If an 5xx error occurs while download a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to download the remaining files.

    ossutil cp oss://bucket/ local_dir -r --output-dir=your_dir
    If an 5xx error occurs while download a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and download to upload the remaining files.

    ossutil cp oss://bucket/ local_dir -r -u
    Use --update policy for incremental download

    ossutil cp oss://bucket1/%e6%b5%8b%e8%af%95 %e4%b8%ad%e6%96%87 --encoding-type url
    Download oss://bucket1/测试 to local file：中文 

    3) Copy between oss 
    Suppose there are following objects in oss:
        oss://bucket/abcdir1/a
        oss://bucket/abcdir1/b
        oss://bucket/abcdir1/c
        oss://bucket/abcdir2/a/
        oss://bucket/abcdir2/b/e

    ossutil cp oss://bucket/abcdir1/a oss://bucket1
    Generate:
        oss://bucket1/a

    ossutil cp oss://bucket/abcdir1/a oss://bucket1/b
    Generate:
        oss://bucket1/b

    ossutil cp oss://bucket/abcdir1/a oss://bucket/abcdir1/a/ 
    Generate:
        oss://bucket/abcdir1/a/a

    ossutil cp oss://bucket/abcdir1/a/ oss://bucket/abcdir1/b/ 
    Generate:
        oss://bucket/abcdir1/b/a/

    ossutil cp oss://bucket/abcdir1/a oss://bucket/abcdir1/a/ -r 
    Error, recursivlly copy

    ossutil cp oss://bucket/abcdir1/a oss://bucket1/b/
    Generate:
        oss://bucket1/b/a

    ossutil cp oss://bucket/abc oss://bucket1/b/
    Error: object not exist

    ossutil cp oss://bucket/abc oss://bucket1/123 -r
    Generate:
        oss://bucket1/123dir1/a
        oss://bucket1/123dir1/b
        oss://bucket1/123dir1/c
        oss://bucket1/123dir2/a/
        oss://bucket1/123dir2/b/e

    ossutil cp oss://bucket/abc oss://bucket1/123/ -r
    Generate:
        oss://bucket1/123/dir1/a
        oss://bucket1/123/dir1/b
        oss://bucket1/123/dir1/c
        oss://bucket1/123/dir2/a/
        oss://bucket1/123/dir2/b/e

    ossutil cp oss://bucket/ oss://bucket1/ -r
    If an 5xx error occurs while copy a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to copy the remaining files.

    ossutil cp oss://bucket/ oss://bucket1/ -r --output-dir=your_dir 
    If an 5xx error occurs while copy a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and continue to copy the remaining files.

    ossutil cp oss://bucket/ oss://bucket1/ -r -u
    Use --update policy for incremental copy

    ossutil cp oss://bucket1/%e6%b5%8b%e8%af%95 oss://bucket2/%e4%b8%ad%e6%96%87 --encoding-type url
    Copy oss://bucket1/测试 to oss://bucket2/中文

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -f, --force
        operate silently without asking user to confirm the operation.

    -u, --update
        update

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.

    --bigfile-threshold=104857600
        the threshold of file size, the file size larger than the threshold will use resume upload or download(default: 104857600), value range is: 0-9223372036854775807

    --part-size=-1
        Part size, the unit is: Byte, in default situation, ossutil will calculate the suitable part size according to file size. The option is useful when user has special needs or user need to performance tuning, the value range is: 1-9223372036854775807(Byte)

    --checkpoint-dir=.ossutil_checkpoint
        Path of checkpoint directory(default:.ossutil_checkpoint), the directory is used in resume upload or download, when operate failed, ossutil will create the directory automatically, and record the checkpoint information in the directory, when the operation is succeed, the directory will be removed, so when specify the option, please make sure the directory can be removed.

    --range
        the range when download objects, the form is like: 3-9 or 3- or -9

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    --meta
        Set object meta as [header:value#header:value...], e.g., Cache-Control:no-cache#Content-Encoding:gzip

    --acl
        acl information.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --parallel
        amount of concurrency tasks when work with a file, value range is: 1-10000, by default the value will be decided by ossutil intelligently.

    --snapshot-path
        This option is used to accelerate the incremental upload of batch files in certain scenarios(currently, download and copy do not support this option). If you use the option when batch copy files, ossutil will generate files to record the snapshot information in the specified directory. When the next time you upload files with the option, ossutil will read the snapshot information under the specified directory for incremental upload. The snapshot-path you specified must be a local file system directory can be written in, if the directory does not exist, ossutil creates the files for recording snapshot information, else ossutil will read snapshot information from the path for incremental upload(ossutil will only upload the files which has not been successfully upload to oss and the files has been locally modified), and update the snapshot information to the directory. Note: The option record the lastModifiedTime of local files which has been successfully upload in local file system, and compare the lastModifiedTime of local files in the next cp to decided whether to skip the upload of the files, so if you use the option to achieve incremental upload, please make sure no other user modified the corresponding object in oss during the two uploads. If you can not guarantee the scenarios, please use --update option to achieve incremental upload. In addition, ossutil does not automatically delete snapshot-path snapshot information, in order to avoid too much snapshot information, when the snapshot information is useless, please clean up your own snapshot-path on your own.

    --disable-crc64
        Disable crc64, in default situation, ossutil open crc64 check when transmit data.



SYNOPSIS

    Restore Frozen State Object to Read Ready Status

SYNTAX

    ossutil restore cloud_url [--encoding-type url] [-r] [-f] [--output-dir=odir] [-c file]

DETAIL DESCRIPTION

    The command restore frozen state object to read ready status, the object must be in the storage 
    class of Archive. 

    An object of Archive storage class will be in frozen state at first.

    If user restore a frozen state object, the operation will success, and the object will be in 
    restroing status, oss will thaw the object. In this period, if user restore the object again, 
    the operation will success, but the time that the object can be downloaded will not be extended.

    When oss has finished restoring the object, the object can be downloaded.

    The time that an restored object can be downloaded is one day in default, if user restore the 
    object again during the time, the time that the object can be downloaded will be extended for 
    one day, the time can be at most extended to seven days. 

    More information about restore see: https://help.aliyun.com/document_detail/52930.html?spm=5176.doc31947.6.874.8GjVvu  


Usage:

    There are two usages:

    1) ossutil restore oss://bucket/object [--encoding-type url] 
        If --recursive option is not specified, ossutil restore the specified frozen state object 
    to readable status. In the usage, please make sure url exactly specified the object you want to 
    restore, if object not exist, error occurs. No matter --force option is specified or not, ossutil 
    will not show prompt question. 

    2) ossutil restore oss://bucket[/prefix] -r [--encoding-type url] [-f] [--output-dir=odir]
        The usage restore the objects with the specified prefix and in frozen state to readable status. 
    --recursive option is required for the usage, and ossutil will search for prefix-matching objects 
    and restore those objects. When an error occurs when restore an object, ossutil will record the 
    error message to report file, and ossutil will continue to attempt to set acl on the remaining 
    objects(more information see help of cp command). If --force option is specified, ossutil will 
    not show prompt question.

SAMPLE

    1) ossutil restore oss://bucket-restore/object-store
    2) ossutil restore oss://bucket-restore/object-prefix -r
    3) ossutil restore oss://bucket-restore/object-prefix -r -f
    4) ossutil restore oss://bucket-restore/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    Create symlink of object

SYNTAX

    ossutil create-symlink cloud_url target_object [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command create symlink of object in oss, the target object must be object in the 
    same bucket of symlink object, and the file type of target object must not be symlink. 
    So, cloud_url must be in format: oss://bucket/object, and target_object is the object 
    name of target object.  

    When create symlink:
        Will not check whether target object exists;
        Will not check whether target object type is valid;
        Will not check whether if have access permission of target object.
    The check will be done when visiting GetObject, etc.

    If the symlink object exist, and has access permission, the object newly created will 
    cover the old object.

    We can use stat command to query the target object of symlink object.

    More information about symlink see: https://help.aliyun.com/document_detail/45126.html?spm=5176.doc31979.6.870.x3Tqsh

Usage:

    ossutil create-symlink oss://bucket/symlink-object target-object

SAMPLE

    ossutil create-symlink oss://bucket1/object1 object2 
        Create symlink object named object1, which point to object2.

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Display meta information of symlink object

SYNTAX

    ossutil read-symlink oss://bucket/object [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command display the meta information of symlink object. The operation 
    requires that the user have read permission of the symlink object. If you 
    want to get the file data of symlink object, please use cp command to download 
    the symlink object. 

    The item X-Oss-Symlink-Target shows the target object of the symlink object.

    If the object is not symlink object, ossutil return error: NotSymlink.

    More information about symlink see: https://help.aliyun.com/document_detail/45146.html?spm=5176.doc31968.6.871.24y1VX 

Usage:

    ossutil read-symlink oss://bucket/symlink-object

SAMPLE

    ossutil read-symlink oss://bucket1/object1 
        Etag                    : 455E20DBFFF1D588B67D092C46B16DB6
        Last-Modified           : 2017-04-17 14:49:42 +0800 CST
        X-Oss-Symlink-Target    : a

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Get help about commands

SYNTAX

    ossutil help [command]

DETAIL DESCRIPTION

    The command provide the usage of all commands on which help is available, 
    or the usage of the specified command.

Usage:

    There are two usages:

    1) ossutil help
        The usage provides a summary of all commands, each command shows the
    synopsis and a simplified expression of the syntax.

    2) ossutil help command
        The usage provides help about the specified command, which contains
    a detailed description of the command, include samples and optional options.

SAMPLE

    ossutil help
    ossutil help help
    ossutil help ls

OPTIONS

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Create configuration file to store credentials

SYNTAX

    ossutil config [-e endpoint] [-i id] [-k key] [-t token] [-L language] [--output-dir outdir] [-c file]

DETAIL DESCRIPTION

    The command create a configuration file and stores credentials
    information user specified. Credentials information is used when
    access OSS(if a command supports --config-file option, then the 
    information is useful to the command).

    The configuration file can be specified by user, which in default
    is /Users/jxyowen/.ossutilconfig. If the configuration file exist, suppose
    the file is: a, ossutil will save a as a.bak, and rewrite file a, 
    at this time, if file a.bak exists, a.bak will be rewrited.

    Note:
    (1) If the configuration file path you specified is not the default 
    path, please specify --config-file option to the path when use other 
    commands. If you do not specify the --config-file option, ossutil 
    will read the configuration file: /Users/jxyowen/.ossutilconfig.

    (2) Several configuration can be specified through option, eg: --endpoint, 
    --access-key-id etc(for more see the help of each command). If you 
    specified those options when use command, and meanwhile those configurations 
    exist in configurations file, PRI: option > configurations file. 

    (3) If you specified --endpoint or --access-key-id or --access-key-secret 
    or --sts-token option when use command, then ossutil does not insist 
    on configurations file. 

Usage:

    There are two usages for the command, one is interactive(shows
    in 1) ), which is recommended because of safety problem. another is
    non interactive(shows in 2) ).

    1) ossutil config [-c file]
        The usage provides an interactive way to configure credentials.
    Interactively ossutil asks you for:
        (1) config file
            If user enter carriage return, ossutil use the default file: 
        /Users/jxyowen/.ossutilconfig.
            If you specified the config file, please specify --config-file 
        option to the path when use other command that needs configuration. 
        To see the commands who support --config-file option please see the 
        help of each command.
        (2) language
            When configure for the first time(config file not exit), ossutil 
        will ask user to set the language(support Chinese or English at this 
        time), if user did not input the language, ossutil will set language 
        to the value of --language option, if user did not specify --language 
        option, ossutil will set it to Chinese.
            If config file exists, ossutil will set the language according to 
        --language option and configuration in config file, instead of asking 
        user for it.
            ossutil will read the language configuration when run command, if 
        the configuration does not exist or is invalid, ossutil will show in 
        default language: EN.
            Notice that the configuration will go into effect after the config 
        command successfully executed, it's dimmed while execute the command.
        (3) endpoint, accessKeyID, accessKeySecret
            Carriage return means skip the configuration of these options.
        Note: Endpoint means a second-level domain(SLD), eg: oss.aliyuncs.com.
            The three options are necessary in normal condition.
        (4) stsToken
            If you use stsToken to access oss, please enter your stsToken. If not, 
        please enter carriage return to skip the configuration.
            For more information about stsToken, see: https://help.aliyun.com/document_detail/31931.html?spm=5176.doc31867.6.632.hZFNSv
        (5) outputDir
            The section config the directory to place output file in. The section 
        can not be configed through interactive mode, but the section in config 
        file are still effective. 
            The default directory of outputDir is: ossutil_output in current 
        directory. ossutil will place all output files generated during running 
        in this directory. Output files include: report file(generated when error 
        occurs in cp command while batch upload/downlaod/copy files). 
            More information about report file, see help of cp command.
            Note: if outputDir is not exist, ossutil will create the directory 
        automatically, if outputDir you specified exists and is not a directory, 
        ossutil will return an error. 

        In interactive config, Bucket-Endpoint and Bucket-Cname is removed, but 
        the two sections in config file are still effective. 
        (6) Bucket-Endpoint
            Bucket-Endpoint specify endpoint for every individual bucket, the 
        section is prior to endpoint in base section.  
            In current version, Bucket-Endpoint interactive configuration is 
        removed, but the option in config file is still effective. Note, the 
        endpoint should be a second-level domain(SLD), eg: oss.aliyuncs.com. 
            When access a bucket, ossutil will search for endpoint corresponding 
        to the bucket in this section, if found, the endpoint is prior to the 
        endpoint in the base section. If --endpoint option is specified, --endpoint 
        option has the highest priority.
        (7) Bucket-Cname
            Bucket-Cname specify CNAME host for every individual bucket, the section 
        is prior to Bucket-Endpoint and endpoint in the base section.
            More information about CNAME host see: https://help.aliyun.com/document_detail/27112.html?spm=5176.product27099.4.6.Lf06oS#1. 
            In current version, Bucket-Cname interactive configuration is removed, 
        but the option in config file is still effective.
            When access a bucket, ossutil will search for endpoint corresponding 
        tothe bucket in this section, if found, the endpoint has priority over 
        the endpoint in Bucket-Endpoint and the endpoint in the base section. If 
        --endpoint option is specified, --endpoint option has the highest priority.

        PRI: --endpoint option > Bucket-Cname > Bucket-Endpoint > endpoint > default endpoint

    2) ossutil config options
        If any options except --language and --config-file is specified, the 
    command enter the non interactive mode. All the configurations should be 
    specified by options.


Credential File Format:

    [Credentials]
        language = EN 
        endpoint = oss.aliyuncs.com 
        accessKeyID = your_key_id
        accessKeySecret = your_key_secret
        stsToken = your_sts_token
        outputDir = your_output_dir
    [Bucket-Endpoint]
        bucket1 = endpoint1
        bucket2 = endpoint2
        ...
    [Bucket-Cname]
        bucket1 = cname1
        bucket2 = cname2
        ...

SAMPLE

    ossutil config
    ossutil config -e oss-cn-hangzhou.aliyuncs.com -c ~/.myconfig

OPTIONS

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Get crc64 or md5 of local file

SYNTAX

    ossutil hash file_url [--type=hashtype]

DETAIL DESCRIPTION

    The command calculate crc64 or md5/content-md5 value of the specified local file, 
    specify the hashtype by --type, default hashtype is crc64. 

    Warning: user can use stat command to check the crc64 or md5/content-md5 value of 
    normal oss object, see the X-Oss-Hash-Crc64ecma and Content-Md5 field. If the object 
    was uploaded to oss before oss support crc64 feature, stat result will not show 
    X-Oss-Hash-Crc64ecma, if the object is append file type or multipart, stat result 
    will not show Content-Md5. 

    Crc64 is calcuated according to ECMA-182(http://www.ecma-international.org/publications/standards/Ecma-182.htm).

    When hashtype is md5, it will output both md5 and content-md5 of local file. 
    Content-md5 is base64 encoded string of md5. For more detial about content-md5, 
    please refer to https://tools.ietf.org/html/rfc1864.

Usage:

    ossutil hash file_url [--type=hashtype]

SAMPLE

    1) Get crc64 of local file: 
        ossutil hash test.txt or
        ossutil hash test.txt --type=crc64
        
        output: 
        CRC64-ECMA                  : 295992936743767023        

    2) Get md5  of local file: 
        ossutil hash test.txt --type=md5
         
        output:
        MD5                         : 01C3C45C03B2AF225EFAD9F911A33D73
        Content-MD5                 : AcPEXAOyryJe+tn5EaM9cw==

OPTIONS

    --type=crc64
        hash type, Default: crc64, value range is: crc64/md5



SYNOPSIS

    Update ossutil

SYNTAX

    ossutil update [-f]

DETAIL DESCRIPTION

    The command check version of current ossutil and get the latest version, output the 
    versions, if any updated version exists, the command ask you for upgrading. If --force 
    option is specified, the command upgrade without asking.

SAMPLE

    ossutil update
    ossutil update -f

OPTIONS

    -f, --force
        operate silently without asking user to confirm the operation.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    Make Bucket

SYNTAX

    ossutil mb oss://bucket [--acl acl] [--storage-class class] [-c file]

DETAIL DESCRIPTION

    The command create bucket under the specified credentials. You can specify bucket acl 
    information through --acl option meanwhile. But you can not specify the region for the 
    bucket, the region is decided by endpoint in config file. If the bucket existed under 
    the credentials, no error occurs, but if the bucket belongs to others, error occurs.

    More information about endpoint in config, see help config.

    More information about region, see Region section in https://help.aliyun.com/document_detail/31827.html?spm=5176.doc31826.6.138.rhUAjo.

ACL:

    ossutil supports following bucket acls, shorthand versions in brackets:
        public-read-write
        public-read
        private

    More information about acl, see help set-acl.

StorageClass:

    There are three kinds of StorageClass:
        Standard
        IA
        Archive

    More information about StorageClass see: https://help.aliyun.com/document_detail/31959.html?spm=5176.doc31957.6.839.E1ifnh

Usage:

    ossutil mb oss://bucket [--acl=acl] [--storage-class class] [-c file]
        If you create bucket without --acl option, ossutil will create bucket under the 
    specified credentials and the bucket acl is private, if you want to change acl, please 
    use set-acl command. 
        If you create bucket without --storage-class option, the storage class of bucket will
     be the default one: Standard. 
        If you create bucket with --acl option, ossutil will check the validity of acl, if 
    invalid, ossutil will enter interactive mode, prompt the valid acls and ask you for it. 
        If you create bucket with --storage-class option, ossutil will check the validity of 
    storage class.

SAMPLE

    1)ossutil mb oss://bucket1
    2)ossutil mb oss://bucket1 --acl=public-read-write
    3)ossutil mb oss://bucket1 --storage-class IA 
    4)ossutil mb oss://bucket1 --acl=public-read-write --storage-class IA

OPTIONS

    --acl
        acl information.

    --storage-class=Standard
        set the storage class of bucket(default: Standard), value range is: Standard/IA/Archive.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.



SYNOPSIS

    List Buckets or Objects

SYNTAX

    ossutil ls [oss://bucket[/prefix]] [-s] [-d] [--limited-num num] [--marker marker] [--upload-id-marker umarker] [-c file]

DETAIL DESCRIPTION

    The command list buckets of the specified credentials. or objects of the specified 
    endpoint and credentials, with simple additional information, about each matching 
    provider, bucket, subdirectory, or object. If --short-format option is specified, 
    ossutil will show by short format. 

--encoding-type option

    If the --encoding-type option is setted to url, the object/prefix inputted is url 
    encoded, if the --marker option or --upload-id-marker option is specified, ossutil 
    will consider the marker or upload-id-marker inputted is also url encoded.

    Note: If the option is specified, the cloud_url like: oss://bucket/object should be 
    inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not 
    be url encoded. 


Usage:

    There are two usages:

    1) ossutil ls [oss://] [-s] [--limited-num num] [--marker marker]
        If you list without a cloud_url, ossutil lists all the buckets using the credentials
    in config file with last modified time and location in addition. --show_format option 
    will ignore last modified time and location. The usage do not support --directory 
    option.

    2) ossutil ls oss://bucket[/prefix] [-s] [-d] [-m] [-a] [--limited-num num] [--marker marker] [--upload-id-marker umarker]
        If you list without --multipart and --all-type option, ossutil will list objects 
    in the specified bucket(with the prefix if you specified), with object size, last 
    modified time and etag in addition, --short-format option ignores all the additional 
    information. --directory option returns top-level subdirectory names instead of contents 
    of the subdirectory, which in default show by short format. the directory is end with /. 
        --multipart option will show multipart upload tasks under the cloud_url(oss://bucket[/prefix]), 
    which means, ossutil will show the uploadId of those uncompleted multipart, whose object 
    name starts with the specified prefix. ossutil will show the init time of uploadId meanwhile. 
    The usage also supports --short-format and --directory option. (Multipart upload is also used 
    in resume cp. More information about multipart see: https://help.aliyun.com/document_detail/31991.html?spm=5176.doc31992.6.880.VOSDk5). 
        --all-type option will show objects and multipart upload tasks under the cloud_url(oss://bucket[/prefix]),  
    which means, ossutil will both show the objects with the specified prefix and the uploadId of 
    those uncompleted multipart, whose object name starts with the specified prefix. The usage also 
    support --short-format and --directory option.
        If user specified --limited-num option, the total num will not exceed the num. If user list 
    objects and Multipart Uploads meanwhile, the total num of objects and Multipart Uploads will not 
    exceed the num. 
        --upload-id-marker option is not effective when list objects. When list Multipart Uploads, 
    --marker option and --upload-id-marker option decide the initial position of listing meanwhile,
    for more initial, see: https://help.aliyun.com/document_detail/31997.html?spm=5176.doc31965.6.887.MK6GVw.

SAMPLE

    1) ossutil ls -s
        oss://bucket1
        oss://bucket2
        oss://bucket3
        Bucket Number is: 3

    2) ossutil ls oss:// -s
        oss://bucket1
        oss://bucket2
        oss://bucket3
        Bucket Number is: 3

    3) ossutil ls oss://bucket1 -s
        oss://bucket1/dir1/obj11
        oss://bucket1/obj1
        oss://bucket1/sample.txt
        Object Number is: 3

    4) ossutil ls oss://bucket1
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:06:29 +0000 CST  201933      Standard   7E2F4A7F1AC9D2F0996E8332D5EA5B41  oss://bucket1/dir1/obj11
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        2016-04-08 14:50:47 +0000 CST 6476984      Standard   4F16FDAE7AC404CEC8B727FCC67779D6  oss://bucket1/sample.txt
        Object Number is: 3

    5) ossutil ls oss://bucket1 -d
        oss://bucket1/obj1
        oss://bucket1/dir1
        oss://bucket1/sample.txt
        Object and Directory Number is: 3

    6) ossutil ls oss://bucket1 -m 
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        2017-01-20 11:16:21 +0800 CST  A20157A7B2FEC4670626DAE0F4C0073C  oss://bucket1/tobj
        UploadID Number is: 3
    
    7) ossutil ls oss://bucket1/obj -m 
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 2
 
    8) ossutil ls oss://bucket1 -a 
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:06:29 +0000 CST  201933      Standard   7E2F4A7F1AC9D2F0996E8332D5EA5B41  oss://bucket1/dir1/obj11
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        2016-04-08 14:50:47 +0000 CST 6476984      Standard   4F16FDAE7AC404CEC8B727FCC67779D6  oss://bucket1/sample.txt
        Object Number is: 3
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:43:13 +0000 CST  2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        2017-01-20 11:16:21 +0800 CST  A20157A7B2FEC4670626DAE0F4C0073C  oss://bucket1/tobj
        UploadID Number is: 4
         
    9) ossutil ls oss://bucket1/obj -a 
        LastModifiedTime              Size(B)  StorageClass   ETAG                              ObjectName
        2015-06-05 14:36:21 +0000 CST  201933      Standard   6185CA2E8EB8510A61B3A845EAFE4174  oss://bucket1/obj1
        Object Number is: 1
        InitiatedTime                  UploadID                          ObjectName
        2017-01-13 03:45:26 +0000 CST  15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2017-01-13 03:43:13 +0000 CST  2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        2017-01-13 03:45:25 +0000 CST  3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 3

    10) ossutil ls oss://bucket1/obj -a -s 
        oss://bucket1/obj1
        Object Number is: 1
        UploadID                          ObjectName
        15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        2A1F9B4A95E341BD9285CC42BB950EE0  oss://bucket1/obj1
        3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 3

    11) ossutil ls oss://bucket1/obj -a -s --marker=obj1 
        Object Number is: 0
        UploadID                          ObjectName
        3998971ACAF94AD9AC48EAC1988BE863  oss://bucket1/obj2
        UploadID Number is: 1

    12) ossutil ls oss://bucket1/obj -a -s --limited-num=2 
        oss://bucket1/obj1
        Object Number is: 1
        UploadID                          ObjectName
        15754AF7980C4DFB8193F190837520BB  oss://bucket1/obj1
        UploadID Number is: 1

    13) ossutil ls oss://bucket1/%e4%b8%ad%e6%96%87 --encoding-type url
        LastModifiedTime                   Size(B)  StorageClass   ETAG                                  ObjectName
        2017-03-17 17:34:40 +0800 CST      8345742      Standard   BBCC8C0954B869B4A6B34D9404C5BCFD      oss://bucket1/中文
        Object Number is: 1
        0.066567(s) elapsed

OPTIONS

    -s, --short-format
        Show by short format, if the option is not specified, show long format by default.

    -d, --directory
        Return matching subdirectory names instead of contents of the subdirectory.

    -m, --multipart
        Indicate that the subject of the command are uncompleted Multipart Uploads, instead of objects(which is the subject in default situation.

    -a, --all-type
        Indicate that the subject of the command contains both objects and uncompleted Multipart Uploads.

    --limited-num=-1
        the limited number of return results.

    --marker
        the marker of bucket when list buckets, or the marker of key when list object or Multipart Uploads.

    --upload-id-marker
        the marker of object when list object or Multipart Uploads.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Remove Bucket or Objects

SYNTAX

    ossutil rm oss://bucket[/prefix] [-r] [-b] [-f] [-c file]

DETAIL DESCRIPTION

    The command remove bucket or objects, in some case remove both. Please use the 
    command carefully!! 
    Make sure the objects can be removed before useing the command to remove objects! 
    Make sure the bucket and objects inside can be removed before useing the command 
    to remove bucket!

        (1) Remove single object, see usage 1)
        (2) Remove bucket, don't remove objects inside, see usage 2)
        (3) Batch remove many objects, reserve bucket, see usage 3)
        (4) Remove bucket and objects inside, see usage 4)

        When remove bucket, the --bucket option must be specified.
        If --force option is specified, remove silently without asking user to confirm the 
        operation.  

        Result: if no error displayed before show elasped time, then the target is removed 
        successfully.

    By default, when remove object, ossutil will reserve the uncompleted multipart upload 
    tasks whose object name match the specified cloud_url, if you want to remove those multipart 
    upload tasks, please specify --multipart option. Note: ossutil will remove all the multipart 
    upload tasks of the specified cloud_url, remove a special single multipart upload task 
    is unsupported. 

    If you need to remove object and the multipart upload tasks whose object name match the 
    specified cloud_url meanwhile, please use --all-type option.

    Note: remove the multipart upload tasks uncompleted will cause upload the part fail next 
    time. Because cp command use multipart upload to realize resume upload/download/copy, so 
    remove the multipart upload tasks uncompleted may cause resume upload/download/copy fail 
    the next time(Error: NoSuchUpload). If you want to reupload/download/copy the entire file 
    again, please remove the checkpoint file in checkpoint directory. 

Usage:

    There are four usages:

    1) ossutil rm oss://bucket/object
        (Remove single object)
        If you remove without --recursive and --bucket option, ossutil remove the single 
    object specified in cloud_url. In the usage, please make sure cloud_url exactly specified 
    the object you want to remove, ossutil will not treat object as prefix and remove prefix 
    matching objects. No matter --force is specified or not, ossutil will not show prompt 
    question.
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    of the specified object.
        If --all-type option is specified, ossutil will remove the specified object along 
    with the multipart upload tasks of the specified object. 

    2) ossutil rm oss://bucket -b [-f]
        (Remove bucket, don't remove objects inside)
        If you remove with --bucket option, without --recursive option, ossutil try to 
    remove the bucket, if the bucket is not empty, error occurs. In the usage, please make 
    sure cloud_url exactly specified the bucket you want to remove, or error occurs. If --force 
    option is specified, ossutil will not show prompt question. 

    3) ossutil rm oss://bucket[/prefix] -r [-m] [-a] [-f]
        (Remove objects, reserve bucket)
        If you remove with --recursive option, without --bucket option, ossutil remove all 
    the objects that prefix-matching the cloud_url you specified(empty prefix means all 
    objects in the bucket), bucket will be reserved because of missing --bucket option.
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    whose object name start with the specified prefix.
        If --all-type option is specified, ossutil will remove the objects with the specified 
    prefix along with the multipart upload tasks whose object name start with the specified 
    prefix. 

    4) ossutil rm oss://bucket[/prefix] -r -b [-a] [-f] 
        (Remove bucket and objects inside)
        If you remove with both --recursive and --bucket option, after ossutil removed all 
    the prefix-matching objects, ossutil will try to remove the bucket together. If user want 
    to remove bucket and objects inside, the usage is recommended. If --force option is 
    specified, ossutil will not show prompt question. 
        If --multipart option is specified, ossutil will remove the multipart upload tasks 
    whose object name start with the specified prefix.
        If --all-type option is specified, ossutil will remove the objects with the specified 
    prefix along with the multipart upload tasks whose object name start with the specified 
    prefix. 


	Invalid Usage: 
    1) ossutil rm oss://bucket/object -m -b [-f]
		It's invalid to remove the bucket right after remove uncompleted upload tasks of single 
    object.
    2) ossutil rm oss://bucket/object -a -b [-f]
        It's invalid to remove the bucket right after remove the object and uncompleted upload 
    tasks of the single object you specified.

SAMPLE

    ossutil rm oss://bucket1/obj1
    ossutil rm oss://bucket1/obj1 -m
    ossutil rm oss://bucket1/obj1 -a
    ossutil rm oss://bucket1/objdir -r 
    ossutil rm oss://bucket1/multidir -m -r 
    ossutil rm oss://bucket1/dir -a -r 
    ossutil rm oss://bucket1 -b
    ossutil rm oss://bucket2 -r -b -f
    ossutil rm oss://bucket2 -a -r -b -f
    ossutil rm oss://bucket2/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -b, --bucket
        the option used to make sure the operation will operate on bucket

    -f, --force
        operate silently without asking user to confirm the operation.

    -m, --multipart
        Indicate that the subject of the command are uncompleted Multipart Uploads, instead of objects(which is the subject in default situation.

    -a, --all-type
        Indicate that the subject of the command contains both objects and uncompleted Multipart Uploads.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Display meta information of bucket or objects

SYNTAX

    ossutil stat oss://bucket[/object] [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command display the meta information of bucket or objects. The object meta information 
    setted through set-meta command, can be check by the command.

Usage：

    There are three usages:    

    1) ossutil stat oss://bucket [--encoding-type url]
        ossutil display bucket meta info, include creation date, location, extranet endpoint, 
    intranet endpoint, Owner and acl info.

    2) ossutil stat oss://bucket/object [--encoding-type url]
        ossutil display object meta info, include file size, last modify time, etag, content-type, 
    user meta etc.

SAMPLE

    ossutil stat oss://bucket1
    ossutil stat oss://bucket1/object  
    ossutil stat oss://bucket1/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Set acl on bucket or objects

SYNTAX

    ossutil set-acl oss://bucket[/prefix] [acl] [-r] [-b] [-f] [-c file]

DETAIL DESCRIPTION

    The command set acl on the specified bucket or objects. If you use the command 
    witout acl information, ossutil will ask user for it.

    (1) set acl on bucket, see usage 1)
    (2) set acl on single object, see usage 2)
    (3) batch set acl on many objects, see usage 3)

    When set acl on bucket, the --bucket option must be specified. 
    Set acl on bucket an objects inside simultaneously is not supported, please 
    operate independently.

    Result: if no error displayed before show elasped time, then the setting is completed successfully.
    User can use stat command to check the acl information of bucket or objects.

ACL:

    ossutil supports following bucket acls, shorthand versions in brackets:
        public-read-write
        public-read
        private

    ossutil support following objet acls:
        public-read-write
        public-read
        private
        default

    More information about acl see ACL Control in https://help.aliyun.com/document_detail/31867.html?spm=5176.doc31960.6.147.8dVwsh.

Usage：

    There are three usages:    

    1) ossutil set-acl oss://bucket [acl] -b [-c file]
        If --bucket option is specified, ossutil will try to set acl on bucket. In the 
    usage, please make sure cloud_url exactly specified the bucket you want to set acl 
    on, and --recursive option is not supported here. No matter --force option is specified 
    or not, ossutil will not show prompt question. If acl information is missed, ossutil 
    will enter interactive mode and ask you for it. 

    2) ossutil set-acl oss://bucket/object [acl] [-c file]
        The usage set acl on single object, if object not exist, error occurs. In the 
    usage, please make sure cloud_url exactly specified the object you want to set acl 
    on, and --recursive option is not specified(or ossutil will search for prefix-matching 
    objects and set acl on those objects). No matter --force option is specified or not, 
    ossutil will not show prompt question. If acl information is missed, ossutil will 
    enter interactive mode and ask you for it. 

    3) ossutil set-acl oss://bucket[/prefix] [acl] -r [-f] [-c file]
        The usage can set acl on many objects, --recursive option is required for the 
    usage, ossutil will search for prefix-matching objects and set acl on those objects. 
    If an error occurs, ossutil will record the error message to report file, and ossutil 
    will continue to attempt to set acl on the remaining objects(more information see 
    help of cp command). In the usage, --bucket option is not supported, which means set 
    acl on bucket an objects inside simultaneously is not supported. If --force option 
    is specified, ossutil will not show prompt question. If acl information is missed, 
    ossutil will enter interactive mode and ask you for it. 
        If --include/--exclude option is specified, ossutil will search for pattern-matching 
    objects and set meta on those objects.
        --include and --exclude option, please refer cp command help.

SAMPLE

    (1)ossutil set-acl oss://bucket1 public-read-write -b 

    (2)ossutil set-acl oss://bucket1/obj1 private 

    (3)ossutil set-acl oss://bucket1/obj default -r
       ossutil set-acl oss://bucket1/obj default -r --include "*.jpg"
       ossutil set-acl oss://bucket1/obj default -r --exclude "*.jpg"

    (4)ossutil set-acl oss://bucket1/%e4%b8%ad%e6%96%87 default --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -b, --bucket
        the option used to make sure the operation will operate on bucket

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    set metadata on already uploaded objects

SYNTAX

    ossutil set-meta oss://bucket[/prefix] [header:value#header:value...] [--update] [--delete] [-r] [-f] [-c file]

DETAIL DESCRIPTION

    The command can be used to set, update or delete the specified objects' meta data. 
    If --recursive option is specified, ossutil find all matching objects and batch set 
    meta on these objects, else, ossutil set meta on single object, if the object not 
    exist, error happens. 

    (1) Set full meta: If --update option and --delete option is not specified, ossutil 
        will set the meta of the specified objects to [header:value#header:value...], what
        user inputs. If [header:value#header:value...] is missing, it means clear the meta 
        data of the specified objects(to those headers which can not be deleted, that is, 
        the headers do not start with: X-Oss-Meta-, the value will not be changed), at the 
        time ossutil will ask user to confirm the input.

    (2) Update meta: If --update option is specified, ossutil will update the specified 
        headers of objects to the values that user inputs(the values can be empty), other 
        meta data of the specified objects will not be changed. --delete option is not 
        supported in the usage. 

    (3) Delete meta: If --delete option is specified, ossutil will delete the specified 
        headers of objects that user inputs(to those headers which can not be deleted, 
        that is, the headers do not start with: X-Oss-Meta-, the value will not be changed), 
        in this usage the value must be empty(like header: or header), other meta data 
        of the specified objects will not be changed. --update option is not supported 
        in the usage.

    The meta data of bucket can not be setted by the command, please use other commands. 
    User can use stat command to check the meta information of bucket or objects.

Headers:

    ossutil supports following headers:
        Content-Type
        Content-Disposition
        Expires(time.RFC3339: 2006-01-02T15:04:05Z07:00)
        Accept-Encoding
        X-Oss-Server-Side-Encryption
        X-Oss-Object-Acl
        Cache-Control
        Content-Encoding
        Origin
        and headers starts with: X-Oss-Meta-

    Warning: headers are case-insensitive, but value are case-sensitive.

Usage:

    There are two usages:

    1) ossutil set-meta oss://bucket/object [header:value#header:value...] [--update] [--delete] [-f] 
        If --recursive option is not specified, ossutil set meta on the specified single 
    object. In the usage, please make sure cloud_url exactly specified the object you want to 
    set meta on, if object not exist, error occurs. If --force option is specified, ossutil 
    will not show prompt question. 
        The usage of --update option and --delete option is showed in detailHelpText. 

    2) ossutil set-meta oss://bucket[/prefix] [header:value#header:value...] -r [--update] [--delete] [-f]
        If --recursive option is specified, ossutil will search for prefix-matching objects 
    and set meta on these objects. If an error occurs, ossutil will record the error message 
    to report file, and ossutil will continue to attempt to set acl on the remaining objects(
    more information see help of cp command). 
        If --include/--exclude option is specified, ossutil will search for pattern-matching objects and 
    set meta on those objects. 
	    --include and --exclude option, please refer cp command help.
        If --force option is specified, ossutil will not show prompt question.
        The usage of --update option and --delete option is showed in detailHelpText.

SAMPLE

    (1)ossutil set-meta oss://bucket1/obj1 Cache-Control:no-cache#Content-Encoding:gzip#X-Oss-Meta-a:b
        Set Cache-Control, Content-Encoding and X-Oss-Meta-a header for obj1

    (2)ossutil set-meta oss://bucket1/o X-Oss-Meta-empty:#Content-Type:plain/text -u -r
        Batch update X-Oss-Meta-empty and Content-Type header on objects that start with o

    (3)ossutil set-meta oss://bucket1/ X-Oss-Meta-empty:#Content-Type:plain/text --update -r --include "*.jpg"
        Batch update X-Oss-Meta-empty and Content-Type header on objects ending with .jpg

    (4)ossutil set-meta oss://bucket1/o X-Oss-Meta-empty:#Content-Type:plain/text --update -r --exclude ".jpg"
        Batch update X-Oss-Meta-empty and Content-Type header on objects starting with o and ending with .jpg

    (5)ossutil set-meta oss://bucket1/obj1 X-Oss-Meta-delete -d
        Delete X-Oss-Meta-delete header of obj1 

    (6)ossutil set-meta oss://bucket/o -r
        Batch set the meta of objects that start with o to empty

    (7)ossutil set-meta oss://bucket1/%e4%b8%ad%e6%96%87 X-Oss-Meta-delete --delete --encoding-type url
        Delete X-Oss-Meta-delete header of oss://bucket1/中文

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -u, --update
        update

    --delete
        delete

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    -L EN, --language=EN
        set the language of ossutil(default: EN), value range is: CH/EN, if you set it to "CH", please make sure your system language is UTF-8.

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    Upload, Download or Copy Objects

SYNTAX

    ossutil cp file_url cloud_url  [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir] [--snapshot-path=sdir]
    ossutil cp cloud_url file_url  [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir] [--range=x-y] 
    ossutil cp cloud_url cloud_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=cdir]

DETAIL DESCRIPTION

    The command allows: 
    1. Upload file from local file system to oss 
    2. Download object from oss to local file system
    3. Copy objects between oss
    Which matches with the following three kinds of operations:
        ossutil cp file_url oss://bucket[/prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--snapshot-path=sdir]
        ossutil cp oss://bucket[/prefix] file_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--range=x-y]
        ossutil cp oss://src_bucket[/src_prefix] oss://dest_bucket[/dest_prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] 

    file_url means the file in local file system, it supports relative path and absolute 
    path, the usage of file_url is same with your local file system. oss://bucket[/prefix] 
    means object in oss, it supports prefix matching, but not support wildcard.

    ossutil sperate file of local system and oss objects by the prefix of oss://, which means 
    if the url starts with oss://, ossutil considers it as object, else, ossutil considers it 
    as file in local system. 

    Note: when copy between oss, ossutil only support copy objects, the uncompleted Multipart 
    Uploads are not supported.


--recursive option:

    (1) Upload file to oss: if file_url is directory, the --recursive option must be specified. 

    (2) When download objects or copy objects between oss:
        If --recursive option is not specified, ossutil download or copy the specified single 
    object, in the usage, please make sure url exactly specified the object you want to set meta 
    on, if object not exist, error occurs. 
        If --recursive option is specified, ossutil will search for prefix-matching objects and 
    download or copy these objects. If error occurs, objects which has been download or copyed 
    will not rollback. 

    By default, if an error occurs to a file in batch upload(/download/copy) files operation, 
    ossutil will continue to attempt to copy the remaining files, and ossutil will record the 
    error message to report file. The files succeed copied will not be recorded to report file.   

    Note: Ossutil will print error information and exit, instead of continue to run if an error 
    occurs in batch upload(/download/copy) files operation in several situations:
    (1) If the error occurs before of entering the upload(/download/copy) iteration, ossutil will 
        print error message and return, and the report file will not be generated. eg. user enter 
        an invalid cp command.
    (2) If the error occurs during upload(/download/copy) iteration is: NoSuchBucket, AccessDenied 
        caused by unauthorized authentication and other errors. ossutil will print error message 
        and return, the report file that has been generated will not be deleted.

    Report file name is: ossutil_report_Date_Time.report. Report file is one kind 
    of output files, and will be putted in output directory, the directory can be specified by 
    --output-dir option or outputDir option in config file. If it's not specified, ossutil will use 
    the default directory: ossutil_output in current directory.

    Note: ossutil will not mainten the report file, please check and clear your output directory 
    regularlly to avoid too many report files in your output directory. 

--include and --exclude option:

    When --recursive is specified, these parameters perform pattern matching to either exclude or
    include a particular file or object. By default, all files/objects are included.

    The following pattern symbols are supported.
    *: Matches everything
    ?: Matches any single character
    [sequence]: Matches any character in sequence
    [!sequence]: Matches any character not in sequence
    Note: does not support patterns containing directory info. e.g., --include "/usr/*/test/*.jpg" 

    Any number of these parameters can be passed to a command. You can do this by providing an --exclude
    or --include argument multiple times, e.g.,
      --include "*.txt" --include "*.png". 
    When there are multi filters, the rule is the filters that appear later in the command take precedence
    over filters that appear earlier in the command. e.g.,

    --exclude "*" --include "*.txt"
    All files will be excluded from the command except for files ending with .txt

    --include "*.txt" --exclude "*"
    All files will be excluded from the command.

    e.g., 3 files in current dir
    testfile1.jpg
    testfiel2.txt
    testfile33.jpg

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg'
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg' --include 'testfile*.jpg'
    upload testfile1.jpg to oss://my-bucket/path/testfile1.jpg
    upload testfile33.jpg to oss://my-bucket/path/testfile33.jpg
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt

    $ ossutil cp . oss://my-bucket/path --exclude '*.jpg' --include 'testfile*.jpg' --exclude 'testfile?.jpg'
    upload testfile2.txt to oss://my-bucket/path/testfile2.txt
    upload testfile33.jpg to oss://my-bucket/path/testfile33.jpg

--meta option

    This option will set the specified objects' meta data. If --recursive option is specified, 
    ossutil will set meta for all uploaded objects.  

    ossutil supports following headers:
        X-Oss-Server-Side-Encryption
        X-Oss-Object-Acl
        Content-Type
        Content-Disposition
        Expires(time.RFC3339: 2006-01-02T15:04:05Z07:00)
        Accept-Encoding
        Cache-Control
        Content-Encoding
        Origin
        and headers starts with: X-Oss-Meta-

    Note: headers are case-insensitive, but value are case-sensitive. After setting, origin meta will be
    replaced with specified meta. HTTP HEADER will be reserved if no speified value. User meta will be
    deleted if no specified value.

--acl option

    This option will set acl on the specified objects. If --recursive option is specified, 
    ossutil will set acl for all uploaded objects.  

    ossutil support following objet acls:
        public-read-write
        public-read
        private
        default

    More information about acl see ACL Control in https://help.aliyun.com/document_detail/31867.html?spm=5176.doc31960.6.147.8dVwsh.

--output-dir option
    
    The option specify the directory to deposit output file generated by ossutil, the default value 
    is: ossutil_output in current directory. If the directory specified not exist, ossutil will 
    create the directory automatically, if it exists but is not a directory, ossutil will return an 
    error.  

    Output file contains: report file which used to record error message generated by cp command, 
    set-acl, set-meta, restore command.


Incremental Upload/Download/Copy:

--update option(-u)

    Use the --update option to copy only when the source file is newer than the destination file 
    when the destination file is missing. If --update option is specified, when the destionation 
    file is existed, ossutil will not prompt and copy when newer, no matter if --force option is 
    specified or not.
    The option can be used when batch copy failed, skip the succeed files in retry.

--snapshot-path option

    This option is used to accelerate the incremental upload of batch files in certain scenarios(
    currently, download and copy do not support this option). The scenarios is: lots of files and 
    no other user updated the corresponding object in oss during the two uploads.
    
    If you use the option when batch copy files, ossutil will generate files to record the snapshot 
    information in the specified directory. When the next time you upload files with the option, 
    ossutil will read the snapshot information under the specified directory for incremental upload. 
    The snapshot-path you specified must be a local file system directory can be written in, if the 
    directory does not exist, ossutil creates the files for recording snapshot information, else 
    ossutil will read snapshot information from the directory for incremental upload(ossutil will 
    only upload the files which has not been successfully upload to oss and the files has been locally 
    modified), and update the snapshot information to the directory. 
    
    Note: 
    (1) The option record the lastModifiedTime of local files which has been successfully upload in 
        local file system, and compare the lastModifiedTime of local files in the next cp to decided 
        whether to skip the upload of the files, so if you use the option to achieve incremental upload, 
        please make sure no other user updated the corresponding object in oss during the two uploads. 
        If you can not guarantee the scenarios, please use --update option to achieve incremental upload. 
    (2) Ossutil does not automatically delete snapshot-path snapshot information, in order to avoid too 
        much snapshot information, when the snapshot information is useless, please clean up your own 
        snapshot-path on your own.
    (3) Due to the extra cost of reading and writing snapshot information, if the file num is not very big, 
        or the network condition is good, or there may be some other users to modify the corresponding 
        object in oss during the two uploads, it's not suggested to use the option. you can use --update 
        option for incremental upload. 

Note: --update option and --snapshot-path can be used together, ossutil priority will be based on snapshot 
    information to determine whether to skip upload, if not satisfied, ossutil will then based on --update 
    to determine whether to skip upload. If any of those two policies is specified, ossutil will ingnore 
    --force option, which means whether or not the destionation file exists, ossutil will not ask user 
    whether to replace the file, and determine whether to upload according to incremental upload policies.

    Incremental download will not consider the value of --range option, and only consider whether file 
    exists and lastModifiedTime. Which means even if the range changs between two download, ossutil will 
    skip the files which satisfy the incremental download condition, so, please avoid to use both!


Other Options:

--force option

    If the file dest_url specified is existed, and --update and --snapshot-path option is not specified, 
    ossutil will ask if replace the file(if the input is invalid, the file will not be replaced). If 
    --force option is specified here, ossutil will not prompt, replace by force. The option is useful 
    only when --update and --snapshot-path option is not specified. 

--range option
    
    If user need to range download a file, we can use --range option, if we use the option, then 
    resume copy of big file and multi-thread copy is ineffective.
    
    The offset of file is start 
    with 0, there are three forms: 0-9 or 3- or -9.
        eg: --range=0-9, means download the first to the tenth character of the file.
        --range=3-, means download the fourth character to the end of the file.
        --range=-9, means download the last nine character of the file.
    If the range exceed the file actual scope, will download the whole file.
    More information about range see: https://help.aliyun.com/document_detail/31980.html?spm=5176.doc31994.6.860.YH7LL1

    If you need to download the whole file, please do not specify the option.
    The option is not supported for upload and copy files. 

    Note: Incremental download(-u option) will not conside --range option. Which means even if the 
    range changs between two download, ossutil will skip the files which satisfy the incremental 
    download condition, so, please avoid to use both!

--encoding-type option
    
    If the --encoding-type option is setted to url, it means the object name and file name are url 
    endcoded.


Resume copy of big file:

    If the size of source file is bigger than what --bigfile-threshold option specified(default: 
    100M), ossutil will consider the file as a big file, and use resume copy policy to these files:
    (1) Upload file to oss: ossutil will split the big file to many parts, use multipart upload. If 
        upload is failed, ossutil will record failure information in .ossutil_checkpoint directory 
        in local file system. When retry, ossutil will read the checkpoint information and resume 
        upload, if the upload is succeed, ossutil will remove the .ossutil_checkpoint directory. 
    (2) Download object from oss: ossutil will split the big file to many parts, range get each part. 
        If download is failed, ossutil wll record failure information in .ossutil_checkpoint directory 
        in local file system. If success, ossutil will remove the directory.
    (3) Copy between oss: ossutil will split the big file to many parts, use Upload Part Copy, and 
        record failure information in .ossutil_checkpoint directory in local file system. If success, 
        ossutil will remove the directory.

    Warning:
    1) Resume copy will not be implemented on small file, if failure happens, ossutil will copy the 
        whole file the next time.
    2) In operation (1) and (3), if failure happens, uploadId that has not been completed may appear in 
        oss. If the operation success after retry, these uploadId will be completed automatically. 
    3) When upload file to oss, if .ossutil_checkpoint directory is included in file_url, .ossutil_checkpoint 
        will not be uploaded to oss. The path of checkpoint directory can be specified by --checkpoint-dir 
        option, please make sure the directory you specified can be removed.
    4) If you remove the uncompleted multipart upload tasks by rm command, may cause resume upload/download/copy 
        fail the next time(Error: NoSuchUpload). If you want to reupload/download/copy the entire file again, 
        please remove the checkpoint file in checkpoint directory.


Performance Tuning:

--jobs option or --parallel option (Concurrency Control)

    --jobs option controls the amount of concurrency tasks between multi-files, --parallel option controls 
    the amount of concurrency tasks when work with a file. In default situation, ossutil will calculate the 
    parallel num according to file size(the option is useless to small file, the file size to use multipart 
    upload can be specified by --bigfile-threshold option). When batch upload/download/copy files, the total 
    concurrency tasks num is jobs num multiply by parallel num. The two option can be specified by user, if 
    the performance of default setting is poor, user can adjust the two options. 

    Note:
    1) If the parallels and jobs number are too big, because of the switching between threads, the performance 
    of upload/download/copy may decline, so please set the options according to your machine condition. If need 
    performance tuning, user can set the two options to two small numbers at first and increase them step by step. 
    2) If the parallels and jobs number are too big, in the case of limited machine resources, error "EOF" may 
    occur due to the network transfer too slow, in this situation, please reduce the --jobs and --parallel num. 

--part-size option

    The option specify the part size of resume upload/download/copy of big file. In default situation, ossutil 
    will calculate the part size and parallel according to file size. When performance tuning or some other needs, 
    user can set the option.     

    If the option is specified, part num is: ceil(file size/part size). Note that if --parallel value is bigger 
    than part num, the extra parallel is feeble, the actual parallel will be part num.

    If the part size is too small, it may influence ossutil file upload/download/copy performance, if the part 
    size is too big, it may influence the actual parallel num, so, please if specify the option, please set it 
    to a reasonable value. 


Batch file migration:

    ossutil support batch file migration by transfer files through local file system, the usual usage is: 
    (1) Batch file upload:
        ossutil cp your_dir oss://your_bucket -r -f -u
    (2) Batch file download:
        ossutil cp oss://your_bucket your_dir -r -f -u
    (3) File copy between buckets in the same region：
        ossutil cp oss://your_src_bucket oss://your_dest_bucket -r -f -u

    The meaning of every option, see help above.
    After each migration, please check your report file.

    When batch file upload, if the file num is big and no other user modified the corresponding object in 
    oss during the two uploads, you can use --snapshot-path to accelerate the incremental upload, see more 
    information in help text of --snapshot-path option above. 
    The command is: 
        ossutil cp your_dir oss://your_bucket -r -f -u --shapshot-path=your-path


Usage:

    There are three usages:

    1) ossutil cp file_url oss://bucket[/prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--snapshot-path=sdir]
        The usage upload file in local system to oss. file_url can be file or directory. If file_url 
    is file, no matter --recursive option is specified or not will not affect the result. If file_url 
    is directory, even if the directory is empty or only contains one file, we must specify --recursive 
    option. Mind that, ossutil will upload all sub files and directories(include empty directory) inside 
    file_url to oss, but differe from shell cp, the first level directory specified by file_url will not 
    be upload to oss. 
    Object Naming Rules:
        If file_url is file: if prefix is empty or end with "/", object name is: dest_url + file name.
                             else, object name is: dest_url.
        If file_url is directory: if prefix is empty or end with "/", object name is: dest_url + file path relative to file_url.
        
    2) ossutil cp oss://bucket[/prefix] file_url [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] [--range=x-y] 
        The usage download one or many objects to local system. If --recursive option is not specified, 
    ossutil considers src_url exactly specified the single object you want to download, prefix-matching 
    is not supported now, if the object not exists, error occurs. If --recursive option is specified, 
    ossutil will search for prefix-matching objects and batch download those objects, at this time file_url 
    must be directory, if the directory not exists, ossutil will create the directory automatically.
    File Naming Rules:
        If file_url is file, ossutil download file to the path of file_url, and the file name is got from file_url.
        If file_url is directory, ossutil download file to the directory, and the file name is: object name.
    Warning: If the object name is end with / and size is zero, ossutil will create a directory in local 
    system, instead of creating a file.

    3) ossutil cp oss://src_bucket[/src_prefix] oss://dest_bucket[/dest_prefix] [-r] [-f] [-u] [--output-dir=odir] [--bigfile-threshold=size] [--checkpoint-dir=file] 
        The usage copy objects between oss. The src_bucket can be same with dest_bucket. Pay attention 
    please, if src_url is the same with dest_url, ossutil will do nothing but exit after prompt. Set meta 
    please use "set-meta" command. If --recursive option is not specified, ossutil considers src_url exactly 
    specified the single object you want to copy. If --recursive option is specified, ossutil will search 
    for prefix-matching objects and batch copy those objects. 

    Warning: when batch copy, it's not allowed that src_url is the prefix of dest_url, because recursivlly 
    copy will happen under the situation. dest_ur is the prefix of src_url is not allowed too, because of 
    covering source file. But they are allowed in single file copy.

    Object Naming Rules:
        If src_url is one object: if prefix of dest_object is empty or end with "/", object name is: dest_url + object name exclude parenet directory path. 
                                  else, object name is: dest_url.
        If src_url means multiple objects: object name is: dest_url+ source object name exclude src_prefix.

SAMPLE

    1) Upload to oss
    Suppose there are directory local_dir in local system, 
        local_dir contains file a, b directory c, d, 
        c is empty, d contains file dd.
    
    ossutil cp local_dir/a oss://bucket1
    Generate:
        oss://bucket1/a

    ossutil cp local_dir/a oss://bucket1/b
    Generate:
        oss://bucket1/b

    ossutil cp local_dir/a oss://bucket1/b/
    Generate:
        oss://bucket1/b/a

    ossutil cp local_dir oss://bucket1/b/
    Error

    ossutil cp local_dir oss://bucket1/b -r
    Generate:
        oss://bucket1/b/a
        oss://bucket1/b/b
        oss://bucket1/b/c/
        oss://bucket1/b/d/
        oss://bucket1/b/d/dd

    ossutil cp local_dir oss://bucket1/b -r
    If an 5xx error occurs while upload a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to upload the remaining files.

    ossutil cp local_dir oss://bucket1/b -r --output-dir=your_dir 
    If an 5xx error occurs while upload a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and continue to upload the remaining files.

    ossutil cp local_dir oss://bucket1/b -r -u
    Use --update policy for incremental upload

    ossutil cp local_dir oss://bucket1/b -r --snapshot-path=your_local_path
    Use --snapshot-path policy for incremental upload

    ossutil cp local_dir oss://bucket1/b -r -u --snapshot-path=your_local_path
    Use --snapshot-path and --update policies for incremental upload

    ossutil cp %e4%b8%ad%e6%96%87 oss://bucket1/%e6%b5%8b%e8%af%95 --encoding-type url
    Upload the file "中文" to oss://bucket1/测试

    2) download from oss
    Suppose there are following objects in oss:
        oss://bucket/abcdir1/a
        oss://bucket/abcdir1/b
        oss://bucket/abcdir1/c
        oss://bucket/abcdir2/a/
        oss://bucket/abcdir2/b/e
    And size of oss://bucket/abcdir2/a/ is zero. 

    ossutil cp oss://bucket/abcdir1/a b
    Generate file b

    ossutil cp oss://bucket/abcdir1/a b/
    Generate file a under directory b

    ossutil cp oss://bucket/abcdir1/a b/ --range=30-90
    Generate file a under directory b, the content is the thirty-first character to the ninety-first character of object abcdir1/a.

    ossutil cp oss://bucket/abcdir2/a/ b
    If b exists and is a file, error occurs.
    If b exists and is a directory, generate directory a under directory b.

    ossutil cp oss://bucket/abc b
    Error: object not exist

    ossutil cp oss://bucket/abc b -r
    If b exists and is a file, error occurs.
    Else generate directory dir1, dir2,
        generate file a, b, c in dir1,
        generate directory a, b in dir2, generate file e in directory b.
        
    ossutil cp oss://bucket/ local_dir -r
    If an 5xx error occurs while download a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to download the remaining files.

    ossutil cp oss://bucket/ local_dir -r --output-dir=your_dir
    If an 5xx error occurs while download a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and download to upload the remaining files.

    ossutil cp oss://bucket/ local_dir -r -u
    Use --update policy for incremental download

    ossutil cp oss://bucket1/%e6%b5%8b%e8%af%95 %e4%b8%ad%e6%96%87 --encoding-type url
    Download oss://bucket1/测试 to local file：中文 

    3) Copy between oss 
    Suppose there are following objects in oss:
        oss://bucket/abcdir1/a
        oss://bucket/abcdir1/b
        oss://bucket/abcdir1/c
        oss://bucket/abcdir2/a/
        oss://bucket/abcdir2/b/e

    ossutil cp oss://bucket/abcdir1/a oss://bucket1
    Generate:
        oss://bucket1/a

    ossutil cp oss://bucket/abcdir1/a oss://bucket1/b
    Generate:
        oss://bucket1/b

    ossutil cp oss://bucket/abcdir1/a oss://bucket/abcdir1/a/ 
    Generate:
        oss://bucket/abcdir1/a/a

    ossutil cp oss://bucket/abcdir1/a/ oss://bucket/abcdir1/b/ 
    Generate:
        oss://bucket/abcdir1/b/a/

    ossutil cp oss://bucket/abcdir1/a oss://bucket/abcdir1/a/ -r 
    Error, recursivlly copy

    ossutil cp oss://bucket/abcdir1/a oss://bucket1/b/
    Generate:
        oss://bucket1/b/a

    ossutil cp oss://bucket/abc oss://bucket1/b/
    Error: object not exist

    ossutil cp oss://bucket/abc oss://bucket1/123 -r
    Generate:
        oss://bucket1/123dir1/a
        oss://bucket1/123dir1/b
        oss://bucket1/123dir1/c
        oss://bucket1/123dir2/a/
        oss://bucket1/123dir2/b/e

    ossutil cp oss://bucket/abc oss://bucket1/123/ -r
    Generate:
        oss://bucket1/123/dir1/a
        oss://bucket1/123/dir1/b
        oss://bucket1/123/dir1/c
        oss://bucket1/123/dir2/a/
        oss://bucket1/123/dir2/b/e

    ossutil cp oss://bucket/ oss://bucket1/ -r
    If an 5xx error occurs while copy a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in ossutil_output directory in current path, and continue 
    to copy the remaining files.

    ossutil cp oss://bucket/ oss://bucket1/ -r --output-dir=your_dir 
    If an 5xx error occurs while copy a file, ossutil will generate a report file and record the error 
    information to the file, and store the file in your_dir, and continue to copy the remaining files.

    ossutil cp oss://bucket/ oss://bucket1/ -r -u
    Use --update policy for incremental copy

    ossutil cp oss://bucket1/%e6%b5%8b%e8%af%95 oss://bucket2/%e4%b8%ad%e6%96%87 --encoding-type url
    Copy oss://bucket1/测试 to oss://bucket2/中文

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -f, --force
        operate silently without asking user to confirm the operation.

    -u, --update
        update

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.

    --bigfile-threshold=104857600
        the threshold of file size, the file size larger than the threshold will use resume upload or download(default: 104857600), value range is: 0-9223372036854775807

    --part-size=-1
        Part size, the unit is: Byte, in default situation, ossutil will calculate the suitable part size according to file size. The option is useful when user has special needs or user need to performance tuning, the value range is: 1-9223372036854775807(Byte)

    --checkpoint-dir=.ossutil_checkpoint
        Path of checkpoint directory(default:.ossutil_checkpoint), the directory is used in resume upload or download, when operate failed, ossutil will create the directory automatically, and record the checkpoint information in the directory, when the operation is succeed, the directory will be removed, so when specify the option, please make sure the directory can be removed.

    --range
        the range when download objects, the form is like: 3-9 or 3- or -9

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    --include
        Include Pattern of key, e.g., *.jpg

    --exclude
        Exclude Pattern of key, e.g., *.txt

    --meta
        Set object meta as [header:value#header:value...], e.g., Cache-Control:no-cache#Content-Encoding:gzip

    --acl
        acl information.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --parallel
        amount of concurrency tasks when work with a file, value range is: 1-10000, by default the value will be decided by ossutil intelligently.

    --snapshot-path
        This option is used to accelerate the incremental upload of batch files in certain scenarios(currently, download and copy do not support this option). If you use the option when batch copy files, ossutil will generate files to record the snapshot information in the specified directory. When the next time you upload files with the option, ossutil will read the snapshot information under the specified directory for incremental upload. The snapshot-path you specified must be a local file system directory can be written in, if the directory does not exist, ossutil creates the files for recording snapshot information, else ossutil will read snapshot information from the path for incremental upload(ossutil will only upload the files which has not been successfully upload to oss and the files has been locally modified), and update the snapshot information to the directory. Note: The option record the lastModifiedTime of local files which has been successfully upload in local file system, and compare the lastModifiedTime of local files in the next cp to decided whether to skip the upload of the files, so if you use the option to achieve incremental upload, please make sure no other user modified the corresponding object in oss during the two uploads. If you can not guarantee the scenarios, please use --update option to achieve incremental upload. In addition, ossutil does not automatically delete snapshot-path snapshot information, in order to avoid too much snapshot information, when the snapshot information is useless, please clean up your own snapshot-path on your own.

    --disable-crc64
        Disable crc64, in default situation, ossutil open crc64 check when transmit data.



SYNOPSIS

    Restore Frozen State Object to Read Ready Status

SYNTAX

    ossutil restore cloud_url [--encoding-type url] [-r] [-f] [--output-dir=odir] [-c file]

DETAIL DESCRIPTION

    The command restore frozen state object to read ready status, the object must be in the storage 
    class of Archive. 

    An object of Archive storage class will be in frozen state at first.

    If user restore a frozen state object, the operation will success, and the object will be in 
    restroing status, oss will thaw the object. In this period, if user restore the object again, 
    the operation will success, but the time that the object can be downloaded will not be extended.

    When oss has finished restoring the object, the object can be downloaded.

    The time that an restored object can be downloaded is one day in default, if user restore the 
    object again during the time, the time that the object can be downloaded will be extended for 
    one day, the time can be at most extended to seven days. 

    More information about restore see: https://help.aliyun.com/document_detail/52930.html?spm=5176.doc31947.6.874.8GjVvu  


Usage:

    There are two usages:

    1) ossutil restore oss://bucket/object [--encoding-type url] 
        If --recursive option is not specified, ossutil restore the specified frozen state object 
    to readable status. In the usage, please make sure url exactly specified the object you want to 
    restore, if object not exist, error occurs. No matter --force option is specified or not, ossutil 
    will not show prompt question. 

    2) ossutil restore oss://bucket[/prefix] -r [--encoding-type url] [-f] [--output-dir=odir]
        The usage restore the objects with the specified prefix and in frozen state to readable status. 
    --recursive option is required for the usage, and ossutil will search for prefix-matching objects 
    and restore those objects. When an error occurs when restore an object, ossutil will record the 
    error message to report file, and ossutil will continue to attempt to set acl on the remaining 
    objects(more information see help of cp command). If --force option is specified, ossutil will 
    not show prompt question.

SAMPLE

    1) ossutil restore oss://bucket-restore/object-store
    2) ossutil restore oss://bucket-restore/object-prefix -r
    3) ossutil restore oss://bucket-restore/object-prefix -r -f
    4) ossutil restore oss://bucket-restore/%e4%b8%ad%e6%96%87 --encoding-type url

OPTIONS

    -r, --recursive
        operate recursively, for those commands which support the option, when use them, if the option is specified, the command will operate on all match objects under the bucket, else we will search the specified object and operate on the single object.

    -f, --force
        operate silently without asking user to confirm the operation.

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500

    -j 5, --jobs=5
        amount of concurrency tasks between multi-files(default: 5), value range is: 1-10000

    --output-dir=ossutil_output
        The option specify the directory to place output file in, output file contains: report file generated by cp command when error happens of batch copy operation(for more information about report file, see help of cp command). The default value of the option is: ossutil_output directory in current directory.



SYNOPSIS

    Create symlink of object

SYNTAX

    ossutil create-symlink cloud_url target_object [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command create symlink of object in oss, the target object must be object in the 
    same bucket of symlink object, and the file type of target object must not be symlink. 
    So, cloud_url must be in format: oss://bucket/object, and target_object is the object 
    name of target object.  

    When create symlink:
        Will not check whether target object exists;
        Will not check whether target object type is valid;
        Will not check whether if have access permission of target object.
    The check will be done when visiting GetObject, etc.

    If the symlink object exist, and has access permission, the object newly created will 
    cover the old object.

    We can use stat command to query the target object of symlink object.

    More information about symlink see: https://help.aliyun.com/document_detail/45126.html?spm=5176.doc31979.6.870.x3Tqsh

Usage:

    ossutil create-symlink oss://bucket/symlink-object target-object

SAMPLE

    ossutil create-symlink oss://bucket1/object1 object2 
        Create symlink object named object1, which point to object2.

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



SYNOPSIS

    Display meta information of symlink object

SYNTAX

    ossutil read-symlink oss://bucket/object [--encoding-type url] [-c file]

DETAIL DESCRIPTION

    The command display the meta information of symlink object. The operation 
    requires that the user have read permission of the symlink object. If you 
    want to get the file data of symlink object, please use cp command to download 
    the symlink object. 

    The item X-Oss-Symlink-Target shows the target object of the symlink object.

    If the object is not symlink object, ossutil return error: NotSymlink.

    More information about symlink see: https://help.aliyun.com/document_detail/45146.html?spm=5176.doc31968.6.871.24y1VX 

Usage:

    ossutil read-symlink oss://bucket/symlink-object

SAMPLE

    ossutil read-symlink oss://bucket1/object1 
        Etag                    : 455E20DBFFF1D588B67D092C46B16DB6
        Last-Modified           : 2017-04-17 14:49:42 +0800 CST
        X-Oss-Symlink-Target    : a

OPTIONS

    --encoding-type
        the encoding type of object name or file name that user inputs, currently ossutil only supports url encode, which means the value range of the option is: url, if you do not specify the option, it means the object name or file name that user inputed was not encoded. bucket name does not support url encode. Note, if the option is specified, the cloud_url like: oss://bucket/object should be inputted as: oss://bucket/url_encode(object), the string: oss://bucket/ should not be url encoded.

    -c, --config-file
        Path of ossutil configuration file, where to dump config in config command, or to load config in other commands that need credentials.

    -e, --endpoint
        Base endpoint for oss endpoint(Notice that the value of the option will cover the value in config file). Take notice that it should be second-level domain(SLD).

    -i, --access-key-id
        AccessKeyID while access oss(Notice that the value of the option will cover the value in config file).

    -k, --access-key-secret
        AccessKeySecret while access oss(Notice that the value of the option will cover the value in config file).

    -t, --sts-token
        STSToken while access oss(Notice that the value of the option will cover the value in config file), not necessary.

    --retry-times=3
        retry times when fail(default: 3), value range is: 1-500



Usage: ossutil [command] [args...] [options...]
Please use 'ossutil help command' to show help of command

Commands:
  mb              cloud_url [options]
        Make Bucket
  ls              [cloud_url] [options]
        List Buckets or Objects
  rm              cloud_url [options]
        Remove Bucket or Objects
  stat            cloud_url [options]
        Display meta information of bucket or objects
  set-acl         cloud_url [acl] [options]
        Set acl on bucket or objects
  set-meta        cloud_url [meta] [options]
        set metadata on already uploaded objects
  cp              src_url dest_url [options]
        Upload, Download or Copy Objects
  restore         cloud_url [options]
        Restore Frozen State Object to Read Ready Status
  create-symlink  cloud_url target_url [options]
        Create symlink of object
  read-symlink    cloud_url [options]
        Display meta information of symlink object
  sign            cloud_url [options]
        Generate download link for object

Additional Commands:
  help            [command]
        Get help about commands
  config          [options]
        Create configuration file to store credentials
  hash            file_url [options]
        Get crc64 or md5 of local file
  update          [options]
        Update ossutil

Usage: ossutil [command] [args...] [options...]
Please use 'ossutil help command' to show help of command

Commands:
  mb              cloud_url [options]
        Make Bucket
  ls              [cloud_url] [options]
        List Buckets or Objects
  rm              cloud_url [options]
        Remove Bucket or Objects
  stat            cloud_url [options]
        Display meta information of bucket or objects
  set-acl         cloud_url [acl] [options]
        Set acl on bucket or objects
  set-meta        cloud_url [meta] [options]
        set metadata on already uploaded objects
  cp              src_url dest_url [options]
        Upload, Download or Copy Objects
  restore         cloud_url [options]
        Restore Frozen State Object to Read Ready Status
  create-symlink  cloud_url target_url [options]
        Create symlink of object
  read-symlink    cloud_url [options]
        Display meta information of symlink object
  sign            cloud_url [options]
        Generate download link for object

Additional Commands:
  help            [command]
        Get help about commands
  config          [options]
        Create configuration file to store credentials
  hash            file_url [options]
        Get crc64 or md5 of local file
  update          [options]
        Update ossutil

2018/03/23 18:00:50 help_test.go:25: test help completed
